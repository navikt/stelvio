<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="no/nav/xslt/HentEPSFnrListe.map" md5sum="cbab4631f0c2408c5fb87d30c12accac" version="7.0.302" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.302
*
*   Mapping file:		HentEPSFnrListe.map
*   Map declaration(s):	HentEPSFnrListe
*   Input file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252Fnav-tjeneste-person%252Fno%252Fnav%252Fbo%257DlocalVariables/message%3D%257Bhttp%253A%252F%252Fnav.no%252Fvirksomhet%252Ftjenester%252Ffamilieforhold%252Fv1%257DhentFamilierelasjonerResponse/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252Fnav-tjeneste-person%252Fno%252Fnav%252Fbo%257DlocalVariables/message%3D%257Bhttp%253A%252F%252Fnav.no%252Fvirksomhet%252Ftjenester%252Ffamilieforhold%252Fv1%257DhentFamilierelasjonerResponse/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:io="http://nav-tjeneste-person/no/nav/bo"
    xmlns:io2="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://nav.no/virksomhet/grunnlag/felles/v1"
    xmlns:io4="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io5="http://nav.no/virksomhet/tjenester/familieforhold/v1"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io9="http://nav.no/virksomhet/tjenester/felles/v1"
    xmlns:io8="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:io7="wsdl.http://nav.no/virksomhet/tjenester/familieforhold/v1"
    xmlns:io10="http://nav.no/virksomhet/tjenester/familieforhold/feil/v1"
    xmlns:io11="http://nav.no/virksomhet/grunnlag/familieforhold/v1"
    xmlns:io12="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io13="http://nav.no/virksomhet/tjenester/familieforhold/meldinger/v1"
    xmlns:io14="http://www.w3.org/2005/08/addressing"
    xmlns:map="http://nav-tjeneste-person/no/nav/xslt/HentEPSFnrListe"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="xalan str set msl math map exsl date"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <dataObject>
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io4:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:HentEPSFnrListe2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </dataObject>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io4:smo" mode="map:HentEPSFnrListe"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io4:smo" to "io4:smo".  -->
  <xsl:template match="io4:smo"  mode="map:HentEPSFnrListe">
    <io4:smo>
      <context>
        <transient>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io:localVariables'"/>
          </xsl:attribute>
          <!-- a structural mapping: "context/transient/brukerAdresse"(adresse) to "brukerAdresse"(adresse) -->
          <xsl:if test="context/transient/brukerAdresse">
            <xsl:copy-of select="context/transient/brukerAdresse"/>
          </xsl:if>
          <!-- a for-each transform: "relasjoner"(Relasjon) to "epsFnrListe"(fnrListe) -->
          <!-- variables for custom code -->
          <xsl:variable name="relasjoner1" select="body/io5:hentFamilierelasjonerResponse/response/person/relasjoner"/>
          <xsl:apply-templates select="$relasjoner1[contains(&apos;EKTE,REPA,SAMB&apos;,relasjonsType)]" mode="localRelasjonerToEpsFnrListe_1001632392"/>
          <!-- a simple data mapping: "context/transient/brukerFnr"(string) to "brukerFnr"(string) -->
          <xsl:if test="context/transient/brukerFnr">
            <brukerFnr>
              <xsl:value-of select="context/transient/brukerFnr"/>
            </brukerFnr>
          </xsl:if>
        </transient>
      </context>
    </io4:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io4:smo" to "io4:smo".  -->
  <xsl:template name="map:HentEPSFnrListe2">
    <xsl:param name="smo"/>
    <context>
      <transient>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io:localVariables'"/>
        </xsl:attribute>
        <!-- a structural mapping: "$smo/context/transient/brukerAdresse"(adresse) to "brukerAdresse"(adresse) -->
        <xsl:if test="$smo/context/transient/brukerAdresse">
          <xsl:copy-of select="$smo/context/transient/brukerAdresse"/>
        </xsl:if>
        <!-- a for-each transform: "relasjoner"(Relasjon) to "epsFnrListe"(fnrListe) -->
        <!-- variables for custom code -->
        <xsl:variable name="relasjoner1" select="$smo/body/io5:hentFamilierelasjonerResponse/response/person/relasjoner"/>
        <xsl:apply-templates select="$relasjoner1[contains(&apos;EKTE,REPA,SAMB&apos;,relasjonsType)]" mode="localRelasjonerToEpsFnrListe_1001632392"/>
        <!-- a simple data mapping: "$smo/context/transient/brukerFnr"(string) to "brukerFnr"(string) -->
        <xsl:if test="$smo/context/transient/brukerFnr">
          <brukerFnr>
            <xsl:value-of select="$smo/context/transient/brukerFnr"/>
          </brukerFnr>
        </xsl:if>
      </transient>
    </context>
  </xsl:template>

  <!-- This rule represents a for-each transform: "relasjoner" to "epsFnrListe".  -->
  <xsl:template match="relasjoner"  mode="localRelasjonerToEpsFnrListe_1001632392">
    <epsFnrListe>
      <!-- a simple data mapping: "person/fnr"(string) to "epsFnr"(string) -->
      <xsl:if test="person/fnr">
        <epsFnr>
          <xsl:value-of select="person/fnr"/>
        </epsFnr>
      </xsl:if>
    </epsFnrListe>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
