<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="no/nav/xslt/hentFamilierelasjonerRequestMap.map" md5sum="694437d47fe973c21ad76ff6b02b279f" version="7.0.302" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.302
*
*   Mapping file:		hentFamilierelasjonerRequestMap.map
*   Map declaration(s):	hentFamilierelasjonerRequestMap
*   Input file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252Fnav-tjeneste-person%252Fno%252Fnav%252Fbo%257DlocalVariables/message%3D%257Bhttp%253A%252F%252Fnav-lib-frg-tps%252Fno%252Fnav%252Flib%252Ffrg%252Finf%257DhentTPSDataResponseMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252Fnav-tjeneste-person%252Fno%252Fnav%252Fbo%257DlocalVariables/message%3D%257Bhttp%253A%252F%252Fnav.no%252Fvirksomhet%252Ftjenester%252Ffamilieforhold%252Fv1%257DhentFamilierelasjonerRequest/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://nav-lib-frg-tps/no/nav/lib/frg/tps/fault"
    xmlns:in2="http://nav-lib-frg-tps/no/nav/lib/frg/inf"
    xmlns:in3="wsdl.http://nav-lib-frg-tps/no/nav/lib/frg/inf"
    xmlns:io="http://nav-tjeneste-person/no/nav/bo"
    xmlns:out="http://nav.no/virksomhet/grunnlag/felles/v1"
    xmlns:io2="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:out2="http://nav.no/virksomhet/tjenester/familieforhold/v1"
    xmlns:io4="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io5="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:out3="wsdl.http://nav.no/virksomhet/tjenester/familieforhold/v1"
    xmlns:out4="http://nav.no/virksomhet/tjenester/felles/v1"
    xmlns:out5="http://nav.no/virksomhet/tjenester/familieforhold/feil/v1"
    xmlns:out6="http://nav.no/virksomhet/grunnlag/familieforhold/v1"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:out7="http://nav.no/virksomhet/tjenester/familieforhold/meldinger/v1"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io7="http://www.w3.org/2005/08/addressing"
    xmlns:map="http://nav-tjeneste-person/no/nav/xslt/hentFamilierelasjonerRequestMap"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="xalan str set in msl math map exsl in2 date in3"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <dataObject>
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io3:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:hentFamilierelasjonerRequestMap2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </dataObject>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io3:smo" mode="map:hentFamilierelasjonerRequestMap"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io3:smo" to "io3:smo".  -->
  <xsl:template match="io3:smo"  mode="map:hentFamilierelasjonerRequestMap">
    <io3:smo>
      <context>
        <transient>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io:localVariables'"/>
          </xsl:attribute>
          <!-- a structural mapping: "context/transient/brukerAdresse"(adresse) to "brukerAdresse"(adresse) -->
          <xsl:if test="context/transient/brukerAdresse">
            <xsl:copy-of select="context/transient/brukerAdresse"/>
          </xsl:if>
          <!-- a simple data mapping: "context/transient/brukerFnr"(string) to "brukerFnr"(string) -->
          <xsl:if test="context/transient/brukerFnr">
            <brukerFnr>
              <xsl:value-of select="context/transient/brukerFnr"/>
            </brukerFnr>
          </xsl:if>
        </transient>
      </context>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out3:hentFamilierelasjonerRequest'"/>
        </xsl:attribute>
        <out2:hentFamilierelasjoner>
          <request>
            <!-- a simple data mapping: "context/transient/brukerFnr"(string) to "fnr"(string) -->
            <xsl:if test="context/transient/brukerFnr">
              <fnr>
                <xsl:value-of select="context/transient/brukerFnr"/>
              </fnr>
            </xsl:if>
            <!-- a simple mapping with no associated source:  to "out7:hentSamboerforhold"(boolean) -->
            <out7:hentSamboerforhold>
              <xsl:text>true</xsl:text>
            </out7:hentSamboerforhold>
          </request>
        </out2:hentFamilierelasjoner>
      </body>
    </io3:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io3:smo" to "io3:smo".  -->
  <xsl:template name="map:hentFamilierelasjonerRequestMap2">
    <xsl:param name="smo"/>
    <context>
      <transient>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io:localVariables'"/>
        </xsl:attribute>
        <!-- a structural mapping: "$smo/context/transient/brukerAdresse"(adresse) to "brukerAdresse"(adresse) -->
        <xsl:if test="$smo/context/transient/brukerAdresse">
          <xsl:copy-of select="$smo/context/transient/brukerAdresse"/>
        </xsl:if>
        <!-- a simple data mapping: "$smo/context/transient/brukerFnr"(string) to "brukerFnr"(string) -->
        <xsl:if test="$smo/context/transient/brukerFnr">
          <brukerFnr>
            <xsl:value-of select="$smo/context/transient/brukerFnr"/>
          </brukerFnr>
        </xsl:if>
      </transient>
    </context>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out3:hentFamilierelasjonerRequest'"/>
      </xsl:attribute>
      <out2:hentFamilierelasjoner>
        <request>
          <!-- a simple data mapping: "$smo/context/transient/brukerFnr"(string) to "fnr"(string) -->
          <xsl:if test="$smo/context/transient/brukerFnr">
            <fnr>
              <xsl:value-of select="$smo/context/transient/brukerFnr"/>
            </fnr>
          </xsl:if>
          <!-- a simple mapping with no associated source:  to "out7:hentSamboerforhold"(boolean) -->
          <out7:hentSamboerforhold>
            <xsl:text>true</xsl:text>
          </out7:hentSamboerforhold>
        </request>
      </out2:hentFamilierelasjoner>
    </body>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
