<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/XSLTransformation1_req_3.map" md5sum="ef5a8668362858cc69ae9fa48b6f43a9" version="7.0.302" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.302
*
*   Mapping file:		XSLTransformation1_req_3.map
*   Map declaration(s):	XSLTransformation1_req_3
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252Fstelvio-example-contexthandler-provider-lib%252Fno%252Fnav%252Finf%252FContextHandlerVerifier%257DcallWSChainRequestMsg/xpath%3D%252F/smo.xsd, ../../stelvio-commons-lib/no/stelvio/common/context/StelvioContext.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252Fstelvio-example-contexthandler-provider-lib%252Fno%252Fnav%252Finf%252FContextHandlerVerifier%257DcallWSChainRequestMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://www.nav.no/StelvioContextPropagation"
    xmlns:io2="http://stelvio-example-contexthandler-provider-lib/no/nav/dataobject"
    xmlns:io="wsdl.http://stelvio-example-contexthandler-provider-lib/no/nav/inf/ContextHandlerVerifier"
    xmlns:io3="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io4="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io6="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io7="http://stelvio-example-contexthandler-provider-lib/no/nav/inf/ContextHandlerVerifier"
    xmlns:io8="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io9="http://www.w3.org/2005/08/addressing"
    xmlns:map="http://stelvio-example-contexthandler-java/xslt/XSLTransformation1_req_3"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="xalan str set in msl math map exsl date"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <dataObject>
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io4:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:XSLTransformation1_req_32">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </dataObject>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io4:smo" mode="map:XSLTransformation1_req_3"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io4:smo" to "io4:smo".  -->
  <xsl:template match="io4:smo"  mode="map:XSLTransformation1_req_3">
    <io4:smo>
      <!-- a structural mapping: "context"(ContextType) to "context"(ContextType) -->
      <xsl:copy-of select="context"/>
      <headers>
        <SOAPHeader>
          <!-- a simple mapping with no associated source:  to "nameSpace"(anyURI) -->
          <nameSpace>
            <xsl:text>http://www.nav.no/StelvioContextPropagation</xsl:text>
          </nameSpace>
          <!-- a simple mapping with no associated source:  to "name"(NCName) -->
          <name>
            <xsl:text>StelvioContext</xsl:text>
          </name>
          <!-- a simple mapping with no associated source:  to "prefix"(NCName) -->
          <prefix>
            <xsl:text>sc</xsl:text>
          </prefix>
          <!-- a structural mapping: "context/userContext/entries/value"(StelvioContext) to "value"(StelvioContext) -->
          <xsl:if test="context/userContext/entries/value">
            <xsl:copy-of select="context/userContext/entries/value"/>
          </xsl:if>
        </SOAPHeader>
      </headers>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io:callWSChainRequestMsg'"/>
        </xsl:attribute>
        <io7:callWSChain>
          <request>
            <!-- a simple data mapping: "body/io7:callWSChain/request/request"(string) to "request"(string) -->
            <xsl:if test="body/io7:callWSChain/request/request">
              <request>
                <xsl:value-of select="body/io7:callWSChain/request/request"/>
              </request>
            </xsl:if>
          </request>
        </io7:callWSChain>
      </body>
    </io4:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io4:smo" to "io4:smo".  -->
  <xsl:template name="map:XSLTransformation1_req_32">
    <xsl:param name="smo"/>
    <!-- a structural mapping: "$smo/context"(ContextType) to "context"(ContextType) -->
    <xsl:copy-of select="$smo/context"/>
    <headers>
      <SOAPHeader>
        <!-- a simple mapping with no associated source:  to "nameSpace"(anyURI) -->
        <nameSpace>
          <xsl:text>http://www.nav.no/StelvioContextPropagation</xsl:text>
        </nameSpace>
        <!-- a simple mapping with no associated source:  to "name"(NCName) -->
        <name>
          <xsl:text>StelvioContext</xsl:text>
        </name>
        <!-- a simple mapping with no associated source:  to "prefix"(NCName) -->
        <prefix>
          <xsl:text>sc</xsl:text>
        </prefix>
        <!-- a structural mapping: "$smo/context/userContext/entries/value"(StelvioContext) to "value"(StelvioContext) -->
        <xsl:if test="$smo/context/userContext/entries/value">
          <xsl:copy-of select="$smo/context/userContext/entries/value"/>
        </xsl:if>
      </SOAPHeader>
    </headers>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'io:callWSChainRequestMsg'"/>
      </xsl:attribute>
      <io7:callWSChain>
        <request>
          <!-- a simple data mapping: "$smo/body/io7:callWSChain/request/request"(string) to "request"(string) -->
          <xsl:if test="$smo/body/io7:callWSChain/request/request">
            <request>
              <xsl:value-of select="$smo/body/io7:callWSChain/request/request"/>
            </request>
          </xsl:if>
        </request>
      </io7:callWSChain>
    </body>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
