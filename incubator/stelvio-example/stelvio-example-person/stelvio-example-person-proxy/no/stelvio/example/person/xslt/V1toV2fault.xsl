<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="no/stelvio/example/person/xslt/V1toV2fault.map" md5sum="2242c96ac6477e4b79f74543ce86307f" version="7.0.101" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.101
*
*   Mapping file:		V1toV2fault.map
*   Map declaration(s):	V1toV2fault
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252Fwww.stelvio.no%252Fexample%252Fperson%252FV2%252FPersonService%257DgetPerson_getPersonPersonNotFoundFaultMsg/xpath%3D%252Fbody/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252Fwww.stelvio.no%252Fexample%252Fperson%252FV1%252FPersonService%257DgetPerson_getPersonPersonNotFoundFaultMsg/xpath%3D%252Fbody/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:in="http://www.stelvio.no/example/person/V2"
    xmlns:in2="http://www.stelvio.no/example/person/V2/PersonService"
    xmlns:in3="wsdl.http://www.stelvio.no/example/person/V2/PersonService"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io4="http://www.stelvio.no/example/person/V1"
    xmlns:out="http://www.stelvio.no/example/person/V1/PersonService"
    xmlns:io5="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:out2="wsdl.http://www.stelvio.no/example/person/V1/PersonService"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io7="http://www.w3.org/2005/08/addressing"
    xmlns:map="http://www.stelvio.no/example/person/xslt/V1toV2fault"
    exclude-result-prefixes="in in2 in3 map xalan"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root template  -->
  <xsl:template match="/">
    <xsl:apply-templates select="body" mode="map:V1toV2fault"/>
  </xsl:template>

  <!-- This rule represents an element mapping: "body" to "body".  -->
  <xsl:template match="body"  mode="map:V1toV2fault">
    <body>
      <!-- a structural mapping: "in2:getPersonFault1_getPersonPersonNotFoundFault"(PersonNotFoundFault) to "out:getPersonFault1_getPersonPersonNotFoundFault"(PersonNotFoundFault) -->
      <xsl:apply-templates select="in2:getPersonFault1_getPersonPersonNotFoundFault" mode="localGetPersonFault1_getPersonPersonNotFoundFaultToGetPersonFault1_getPersonPersonNotFoundFault_3024128"/>
    </body>
  </xsl:template>

  <!-- This rule represents an element mapping: "in2:getPersonFault1_getPersonPersonNotFoundFault" to "out:getPersonFault1_getPersonPersonNotFoundFault".  -->
  <xsl:template match="in2:getPersonFault1_getPersonPersonNotFoundFault"  mode="localGetPersonFault1_getPersonPersonNotFoundFaultToGetPersonFault1_getPersonPersonNotFoundFault_3024128">
    <out:getPersonFault1_getPersonPersonNotFoundFault>
      <!-- a simple data mapping: "id"(string) to "id"(string) -->
      <id>
        <xsl:value-of select="id"/>
      </id>
    </out:getPersonFault1_getPersonPersonNotFoundFault>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
