<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="no/nav/xslt/MergeHentPerson.map" md5sum="880790fd3ceb55cc68f4f6bc9d5b9b87" version="7.0.302" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.302
*
*   Mapping file:		MergeHentPerson.map
*   Map declaration(s):	MergeHentPerson
*   Input file(s):		smo://smo/name%3Dwsdl-primary/sharedContext%3D%257Bhttp%253A%252F%252Fnav-tjeneste-person%252Fno%252Fnav%252Fasbo%257DTPSPersonSharedContext/message%3D%257Bhttp%253A%252F%252Fnav-lib-frg-tps%252Fno%252Fnav%252Flib%252Ffrg%252Finf%257DhentTPSDataResponseMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/sharedContext%3D%257Bhttp%253A%252F%252Fnav-tjeneste-person%252Fno%252Fnav%252Fasbo%257DTPSPersonSharedContext/message%3D%257Bhttp%253A%252F%252Fnav.no%252Fvirksomhet%252Ftjenester%252Fperson%252Fv1%257DhentPersonResponse/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://nav-lib-frg-tps/no/nav/lib/frg/tps/fault"
    xmlns:in3="wsdl.http://nav-lib-frg-tps/no/nav/lib/frg/inf"
    xmlns:in2="http://nav-lib-frg-tps/no/nav/lib/frg/inf"
    xmlns:io3="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io4="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:out6="http://nav.no/virksomhet/part/person/v1"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:out="http://nav.no/virksomhet/tjenester/person/v1"
    xmlns:out7="http://nav-person-tjenestespesifikasjon/no/nav/virksomhet/tjenester/person"
    xmlns:out8="http://nav-person-tjenestespesifikasjon/no/nav/virksomhet/part/person"
    xmlns:io5="http://nav-tjeneste-person/no/nav/asbo"
    xmlns:io="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:out2="http://nav.no/virksomhet/tjenester/person/feil/v1"
    xmlns:io6="http://nav.no/virksomhet/tjenester/felles/v1"
    xmlns:io2="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:io7="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:out3="wsdl.http://nav.no/virksomhet/tjenester/person/v1"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io8="http://www.w3.org/2005/08/addressing"
    xmlns:out4="http://nav.no/virksomhet/tjenester/person/meldinger/v1"
    xmlns:out5="http://nav-person-tjenestespesifikasjon/no/nav/virksomhet/tjenester/person/meldinger"
    xmlns:DU="xalan://no.nav.java.DateUtilities"
    xmlns:map="http://nav-tjeneste-person/xslt/MergeHentPerson"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="xalan DU str set in msl math map exsl in2 date in3"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <dataObject>
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io4:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:MergeHentPerson2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </dataObject>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io4:smo" mode="map:MergeHentPerson"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io4:smo" to "io4:smo".  -->
  <xsl:template match="io4:smo"  mode="map:MergeHentPerson">
    <io4:smo>
      <!-- a structural mapping: "context"(<Anonymous>) to "body"(hentPersonResponse) -->
      <xsl:apply-templates select="context" mode="localContextToBody_1456088450"/>
    </io4:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io4:smo" to "io4:smo".  -->
  <xsl:template name="map:MergeHentPerson2">
    <xsl:param name="smo"/>
    <!-- a structural mapping: "$smo/context"(<Anonymous>) to "body"(hentPersonResponse) -->
    <xsl:apply-templates select="$smo/context" mode="localContextToBody_1456088450"/>
  </xsl:template>

  <!-- This rule represents an element mapping: "context" to "body".  -->
  <xsl:template match="context"  mode="localContextToBody_1456088450">
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out3:hentPersonResponse'"/>
      </xsl:attribute>
      <!-- a structural mapping: "shared"(TPSPersonSharedContext) to "out:hentPersonResponse"(<Anonymous>) -->
      <xsl:apply-templates select="shared" mode="localSharedToHentPersonResponse_1822942891"/>
    </body>
  </xsl:template>

  <!-- This rule represents an element mapping: "shared" to "out:hentPersonResponse".  -->
  <xsl:template match="shared"  mode="localSharedToHentPersonResponse_1822942891">
    <out:hentPersonResponse>
      <response>
        <person>
          <!-- a structural mapping: "person/sivilstandsInfo"(sivilstandsInfoType) to "sivilstand"(Sivilstand) -->
          <xsl:apply-templates select="person/sivilstandsInfo" mode="localSivilstandsInfoToSivilstand_1969627072"/>
          <!-- a simple data mapping: "person/datoUmyndiggjort"(DBdate) to "umyndiggjortDato"(string) -->
          <xsl:if test="person/datoUmyndiggjort">
            <umyndiggjortDato>
              <!-- variables for custom code -->
              <xsl:variable name="datoUmyndiggjort" select="person/datoUmyndiggjort"/>
              <xsl:value-of select="DU:parseTpsDateToWIDString($datoUmyndiggjort)"/>
            </umyndiggjortDato>
          </xsl:if>
          <personstatus>
            <!-- a simple data mapping: "person/kodePersonStatus"(string) to "kode"(string) -->
            <xsl:if test="person/kodePersonStatus">
              <kode>
                <xsl:value-of select="person/kodePersonStatus"/>
              </kode>
            </xsl:if>
            <!-- a simple data mapping: "person/personStatus"(string) to "dekode"(string) -->
            <xsl:if test="person/personStatus">
              <dekode>
                <xsl:value-of select="person/personStatus"/>
              </dekode>
            </xsl:if>
          </personstatus>
          <diskresjonskode>
            <!-- a simple data mapping: "person/spesregType"(TypeSpesReg) to "kode"(string) -->
            <xsl:if test="person/spesregType">
              <kode>
                <xsl:value-of select="person/spesregType"/>
              </kode>
            </xsl:if>
          </diskresjonskode>
          <!-- a structural mapping: "person/navn"(<Anonymous>) to "navn"(Navn) -->
          <xsl:apply-templates select="person/navn" mode="localNavnToNavn_1402470088"/>
          <dodsfall>
            <!-- a simple data mapping: "person/datoDo"(DBdate) to "dodsdato"(date) -->
            <!-- variables for custom code -->
            <xsl:variable name="datoDo" select="person/datoDo"/>
            <xsl:if test="$datoDo &gt; &apos;0&apos;">
              <dodsdato>
                <xsl:value-of select="person/datoDo"/>
              </dodsdato>
            </xsl:if>
            <sporing>
              <endretInfo>
                <!-- a simple data mapping: "person/doTidspunkt"(DBdate) to "dato"(date) -->
                <!-- variables for custom code -->
                <xsl:variable name="doTidspunkt" select="person/doTidspunkt"/>
                <xsl:if test="$doTidspunkt &gt; &apos;0&apos;">
                  <dato>
                    <xsl:value-of select="person/doTidspunkt"/>
                  </dato>
                </xsl:if>
                <!-- a simple data mapping: "person/doSaksbehandler"(Tsaksbehandler) to "ident"(string) -->
                <xsl:if test="person/doSaksbehandler">
                  <ident>
                    <xsl:value-of select="person/doSaksbehandler"/>
                  </ident>
                </xsl:if>
                <!-- a simple data mapping: "person/doSystem"(Tsystem) to "kildeNavn"(string) -->
                <xsl:if test="person/doSystem">
                  <kildeNavn>
                    <xsl:value-of select="person/doSystem"/>
                  </kildeNavn>
                </xsl:if>
              </endretInfo>
            </sporing>
          </dodsfall>
          <personIdent>
            <!-- a simple data mapping: "person/fnr"(Tfnr) to "ident"(string) -->
            <xsl:if test="person/fnr">
              <ident>
                <xsl:value-of select="person/fnr"/>
              </ident>
            </xsl:if>
            <sporing>
              <endretInfo>
                <!-- a simple data mapping: "person/fnrTidspunkt"(DBdate) to "dato"(date) -->
                <!-- variables for custom code -->
                <xsl:variable name="fnrTidspunkt" select="person/fnrTidspunkt"/>
                <xsl:if test="$fnrTidspunkt &gt; &apos;0&apos;">
                  <dato>
                    <xsl:value-of select="person/fnrTidspunkt"/>
                  </dato>
                </xsl:if>
                <!-- a simple data mapping: "person/fnrSaksbehandler"(Tsaksbehandler) to "ident"(string) -->
                <xsl:if test="person/fnrSaksbehandler">
                  <ident>
                    <xsl:value-of select="person/fnrSaksbehandler"/>
                  </ident>
                </xsl:if>
                <!-- a simple data mapping: "person/fnrSystem"(Tsystem) to "kildeNavn"(string) -->
                <xsl:if test="person/fnrSystem">
                  <kildeNavn>
                    <xsl:value-of select="person/fnrSystem"/>
                  </kildeNavn>
                </xsl:if>
              </endretInfo>
            </sporing>
          </personIdent>
          <oppholdstillatelse>
            <!-- a simple data mapping: "personUtland/oppholdstillatelseTom"(DBdate) to "gjelderTom"(date) -->
            <!-- variables for custom code -->
            <xsl:variable name="oppholdstillatelseTom" select="personUtland/oppholdstillatelseTom"/>
            <xsl:if test="$oppholdstillatelseTom &gt; &apos;0&apos;">
              <gjelderTom>
                <xsl:value-of select="personUtland/oppholdstillatelseTom"/>
              </gjelderTom>
            </xsl:if>
            <oppholdstillatelse>
              <!-- a simple data mapping: "personUtland/oppholdstillatelseType"(string) to "kode"(string) -->
              <xsl:if test="personUtland/oppholdstillatelseType">
                <kode>
                  <xsl:value-of select="personUtland/oppholdstillatelseType"/>
                </kode>
              </xsl:if>
              <!-- a simple data mapping: "personUtland/beskrOppholdType"(string) to "dekode"(string) -->
              <xsl:if test="personUtland/beskrOppholdType">
                <dekode>
                  <xsl:value-of select="personUtland/beskrOppholdType"/>
                </dekode>
              </xsl:if>
            </oppholdstillatelse>
            <!-- a simple data mapping: "personUtland/oppholdstillatelseFom"(DBdate) to "gjelderFom"(date) -->
            <!-- variables for custom code -->
            <xsl:variable name="oppholdstillatelseFom" select="personUtland/oppholdstillatelseFom"/>
            <xsl:if test="$oppholdstillatelseFom &gt; &apos;0&apos;">
              <gjelderFom>
                <xsl:value-of select="personUtland/oppholdstillatelseFom"/>
              </gjelderFom>
            </xsl:if>
          </oppholdstillatelse>
          <arbeidstillatelse>
            <arbeidstillatelse>
              <!-- a simple data mapping: "personUtland/arbeidstillatelseType"(string) to "kode"(string) -->
              <xsl:if test="personUtland/arbeidstillatelseType">
                <kode>
                  <xsl:value-of select="personUtland/arbeidstillatelseType"/>
                </kode>
              </xsl:if>
              <!-- a simple data mapping: "personUtland/beskrArbeidstillType"(string) to "dekode"(string) -->
              <xsl:if test="personUtland/beskrArbeidstillType">
                <dekode>
                  <xsl:value-of select="personUtland/beskrArbeidstillType"/>
                </dekode>
              </xsl:if>
            </arbeidstillatelse>
            <!-- a simple data mapping: "personUtland/arbeidstillatelseFom"(DBdate) to "gjelderFom"(date) -->
            <!-- variables for custom code -->
            <xsl:variable name="arbeidstillatelseFom" select="personUtland/arbeidstillatelseFom"/>
            <xsl:if test="$arbeidstillatelseFom &gt; &apos;0&apos;">
              <gjelderFom>
                <xsl:value-of select="personUtland/arbeidstillatelseFom"/>
              </gjelderFom>
            </xsl:if>
            <!-- a simple data mapping: "personUtland/arbeidstillatelseTom"(DBdate) to "gjelderTom"(date) -->
            <!-- variables for custom code -->
            <xsl:variable name="arbeidstillatelseTom" select="personUtland/arbeidstillatelseTom"/>
            <xsl:if test="$arbeidstillatelseTom &gt; &apos;0&apos;">
              <gjelderTom>
                <xsl:value-of select="personUtland/arbeidstillatelseTom"/>
              </gjelderTom>
            </xsl:if>
          </arbeidstillatelse>
          <innvandring>
            <!-- a simple data mapping: "person/datoInnvandret"(DBdate) to "innvandretDato"(string) -->
            <xsl:if test="person/datoInnvandret">
              <innvandretDato>
                <!-- variables for custom code -->
                <xsl:variable name="datoInnvandret" select="person/datoInnvandret"/>
                <xsl:value-of select="DU:parseTpsDateToWIDString($datoInnvandret)"/>
              </innvandretDato>
            </xsl:if>
            <innvandretFraLand>
              <!-- a simple data mapping: "person/kodeInnvandretFra"(string) to "kode"(string) -->
              <xsl:if test="person/kodeInnvandretFra">
                <kode>
                  <xsl:value-of select="person/kodeInnvandretFra"/>
                </kode>
              </xsl:if>
              <!-- a simple data mapping: "person/innvandretFra"(string) to "navn"(string) -->
              <xsl:if test="person/innvandretFra">
                <navn>
                  <xsl:value-of select="person/innvandretFra"/>
                </navn>
              </xsl:if>
            </innvandretFraLand>
          </innvandring>
          <utvandring>
            <!-- a simple data mapping: "person/datoUtvandret"(DBdate) to "utvandretDato"(date) -->
            <!-- variables for custom code -->
            <xsl:variable name="datoUtvandret" select="person/datoUtvandret"/>
            <xsl:if test="$datoUtvandret &gt; &apos;0&apos;">
              <utvandretDato>
                <xsl:value-of select="person/datoUtvandret"/>
              </utvandretDato>
            </xsl:if>
            <utvandretTilLand>
              <!-- a simple data mapping: "person/kodeUtvandretTil"(string) to "kode"(string) -->
              <xsl:if test="person/kodeUtvandretTil">
                <kode>
                  <xsl:value-of select="person/kodeUtvandretTil"/>
                </kode>
              </xsl:if>
              <!-- a simple data mapping: "person/utvandretTil"(string) to "navn"(string) -->
              <xsl:if test="person/utvandretTil">
                <navn>
                  <xsl:value-of select="person/utvandretTil"/>
                </navn>
              </xsl:if>
            </utvandretTilLand>
          </utvandring>
          <!-- a structural mapping: "person/statsborgerskap"(statsborgerskapType) to "statsborgerskap"(Statsborgerskap) -->
          <xsl:apply-templates select="person/statsborgerskap" mode="localStatsborgerskapToStatsborgerskap_1472441266"/>
          <fodeland>
            <!-- a simple data mapping: "person/kodeFodeland"(string) to "kode"(string) -->
            <xsl:if test="person/kodeFodeland">
              <kode>
                <xsl:value-of select="person/kodeFodeland"/>
              </kode>
            </xsl:if>
            <!-- a simple data mapping: "person/fodeLand"(string) to "navn"(string) -->
            <xsl:if test="person/fodeLand">
              <navn>
                <xsl:value-of select="person/fodeLand"/>
              </navn>
            </xsl:if>
          </fodeland>
        </person>
      </response>
    </out:hentPersonResponse>
  </xsl:template>

  <!-- This rule represents an element mapping: "navn" to "navn".  -->
  <xsl:template match="navn"  mode="localNavnToNavn_1402470088">
    <navn>
      <!-- a simple data mapping: "kortnavn"(string) to "kortnavn"(string) -->
      <xsl:if test="kortnavn">
        <kortnavn>
          <xsl:value-of select="kortnavn"/>
        </kortnavn>
      </xsl:if>
      <!-- a simple data mapping: "fornavn"(string) to "fornavn"(string) -->
      <xsl:if test="fornavn">
        <fornavn>
          <xsl:value-of select="fornavn"/>
        </fornavn>
      </xsl:if>
      <!-- a simple data mapping: "mellomnavn"(string) to "mellomnavn"(string) -->
      <xsl:if test="mellomnavn">
        <mellomnavn>
          <xsl:value-of select="mellomnavn"/>
        </mellomnavn>
      </xsl:if>
      <!-- a simple data mapping: "etternavn"(string) to "etternavn"(string) -->
      <xsl:if test="etternavn">
        <etternavn>
          <xsl:value-of select="etternavn"/>
        </etternavn>
      </xsl:if>
      <sporing>
        <endretInfo>
          <!-- a simple data mapping: "navnTidspunkt"(DBdate) to "dato"(date) -->
          <xsl:if test="navnTidspunkt">
            <dato>
              <xsl:value-of select="navnTidspunkt"/>
            </dato>
          </xsl:if>
          <!-- a simple data mapping: "navnSaksbehandler"(Tsaksbehandler) to "ident"(string) -->
          <xsl:if test="navnSaksbehandler">
            <ident>
              <xsl:value-of select="navnSaksbehandler"/>
            </ident>
          </xsl:if>
          <!-- a simple data mapping: "navnSystem"(Tsystem) to "kildeNavn"(string) -->
          <xsl:if test="navnSystem">
            <kildeNavn>
              <xsl:value-of select="navnSystem"/>
            </kildeNavn>
          </xsl:if>
        </endretInfo>
      </sporing>
    </navn>
  </xsl:template>

  <!-- This rule represents an element mapping: "statsborgerskap" to "statsborgerskap".  -->
  <xsl:template match="statsborgerskap"  mode="localStatsborgerskapToStatsborgerskap_1472441266">
    <statsborgerskap>
      <!-- a simple data mapping: "datoStatsborger"(DBdate) to "gjelderFom"(date) -->
      <!-- variables for custom code -->
      <xsl:variable name="datoStatsborger" select="datoStatsborger"/>
      <xsl:if test="$datoStatsborger &gt; &apos;0&apos;">
        <gjelderFom>
          <xsl:value-of select="datoStatsborger"/>
        </gjelderFom>
      </xsl:if>
      <sporing>
        <endretInfo>
          <!-- a simple data mapping: "statsbTidspunkt"(DBdate) to "dato"(date) -->
          <!-- variables for custom code -->
          <xsl:variable name="statsbTidspunkt" select="statsbTidspunkt"/>
          <xsl:if test="$statsbTidspunkt &gt; &apos;0&apos;">
            <dato>
              <xsl:value-of select="statsbTidspunkt"/>
            </dato>
          </xsl:if>
          <!-- a simple data mapping: "statsbSaksbehandler"(Tsaksbehandler) to "ident"(string) -->
          <xsl:if test="statsbSaksbehandler">
            <ident>
              <xsl:value-of select="statsbSaksbehandler"/>
            </ident>
          </xsl:if>
          <!-- a simple data mapping: "statsbSystem"(Tsystem) to "kildeNavn"(string) -->
          <xsl:if test="statsbSystem">
            <kildeNavn>
              <xsl:value-of select="statsbSystem"/>
            </kildeNavn>
          </xsl:if>
        </endretInfo>
      </sporing>
      <statsborgerskap>
        <!-- a simple data mapping: "kodeStatsborger"(string) to "kode"(string) -->
        <xsl:if test="kodeStatsborger">
          <kode>
            <xsl:value-of select="kodeStatsborger"/>
          </kode>
        </xsl:if>
        <!-- a simple data mapping: "statsborger"(string) to "navn"(string) -->
        <xsl:if test="statsborger">
          <navn>
            <xsl:value-of select="statsborger"/>
          </navn>
        </xsl:if>
      </statsborgerskap>
    </statsborgerskap>
  </xsl:template>

  <!-- This rule represents an element mapping: "sivilstandsInfo" to "sivilstand".  -->
  <xsl:template match="sivilstandsInfo"  mode="localSivilstandsInfoToSivilstand_1969627072">
    <sivilstand>
      <sivilstand>
        <!-- a simple data mapping: "kodeSivilstand"(Tsivilstandkode) to "kode"(string) -->
        <xsl:if test="kodeSivilstand">
          <kode>
            <xsl:value-of select="kodeSivilstand"/>
          </kode>
        </xsl:if>
        <!-- a simple data mapping: "sivilstand"(Tsivilstand) to "dekode"(string) -->
        <xsl:if test="sivilstand">
          <dekode>
            <xsl:value-of select="sivilstand"/>
          </dekode>
        </xsl:if>
      </sivilstand>
      <!-- a simple data mapping: "datoSivilstand"(DBdate) to "gjelderFom"(date) -->
      <!-- variables for custom code -->
      <xsl:variable name="datoSivilstand" select="datoSivilstand"/>
      <xsl:if test="$datoSivilstand &gt; &apos;0&apos;">
        <gjelderFom>
          <xsl:value-of select="datoSivilstand"/>
        </gjelderFom>
      </xsl:if>
      <sporing>
        <endretInfo>
          <!-- a simple data mapping: "sivilstTidspunkt"(DBdate) to "dato"(date) -->
          <!-- variables for custom code -->
          <xsl:variable name="sivilstTidspunkt" select="sivilstTidspunkt"/>
          <xsl:if test="$sivilstTidspunkt &gt; &apos;0&apos;">
            <dato>
              <xsl:value-of select="sivilstTidspunkt"/>
            </dato>
          </xsl:if>
          <!-- a simple data mapping: "sivilstSaksbehandler"(Tsaksbehandler) to "ident"(string) -->
          <xsl:if test="sivilstSaksbehandler">
            <ident>
              <xsl:value-of select="sivilstSaksbehandler"/>
            </ident>
          </xsl:if>
          <!-- a simple data mapping: "sivilstSystem"(Tsystem) to "kildeNavn"(string) -->
          <xsl:if test="sivilstSystem">
            <kildeNavn>
              <xsl:value-of select="sivilstSystem"/>
            </kildeNavn>
          </xsl:if>
        </endretInfo>
      </sporing>
    </sivilstand>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
