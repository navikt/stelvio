<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="no/nav/xslt/hentTPSAdresseForEPS.map" md5sum="49360cdb6ff70fab5a9df9f09dc936fa" version="7.0.302" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.302
*
*   Mapping file:		hentTPSAdresseForEPS.map
*   Map declaration(s):	hentTPSAdresseForEPS
*   Input file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252Fnav-tjeneste-person%252Fno%252Fnav%252Fbo%257DlocalVariables/message%3D%257Bhttp%253A%252F%252Fnav.no%252Fvirksomhet%252Ftjenester%252Ffamilieforhold%252Fv1%257DhentFamilierelasjonerResponse/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252Fnav-tjeneste-person%252Fno%252Fnav%252Fbo%257DlocalVariables/message%3D%257Bhttp%253A%252F%252Fnav-lib-frg-tps%252Fno%252Fnav%252Flib%252Ffrg%252Finf%257DhentTPSDataRequestMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://nav.no/virksomhet/tjenester/familieforhold/v1"
    xmlns:in2="wsdl.http://nav.no/virksomhet/tjenester/familieforhold/v1"
    xmlns:in3="http://nav.no/virksomhet/tjenester/felles/v1"
    xmlns:in4="http://nav.no/virksomhet/tjenester/familieforhold/feil/v1"
    xmlns:in5="http://nav.no/virksomhet/grunnlag/familieforhold/v1"
    xmlns:in6="http://nav.no/virksomhet/tjenester/familieforhold/meldinger/v1"
    xmlns:out="http://nav-lib-frg-tps/no/nav/lib/frg/tps/fault"
    xmlns:io="http://nav-tjeneste-person/no/nav/bo"
    xmlns:io2="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io4="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io3="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io5="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:out2="http://nav-lib-frg-tps/no/nav/lib/frg/inf"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:out3="wsdl.http://nav-lib-frg-tps/no/nav/lib/frg/inf"
    xmlns:io7="http://www.w3.org/2005/08/addressing"
    xmlns:map="http://nav-tjeneste-person/no/nav/xslt/hentTPSAdresseForEPS"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="set in msl math exsl in2 in3 date in4 xalan in5 in6 str map"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <dataObject>
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io3:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:hentTPSAdresseForEPS2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </dataObject>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io3:smo" mode="map:hentTPSAdresseForEPS"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io3:smo" to "io3:smo".  -->
  <xsl:template match="io3:smo"  mode="map:hentTPSAdresseForEPS">
    <io3:smo>
      <context>
        <transient>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io:localVariables'"/>
          </xsl:attribute>
          <!-- a structural mapping: "context/transient/brukerAdresse"(adresse) to "brukerAdresse"(adresse) -->
          <xsl:if test="context/transient/brukerAdresse">
            <xsl:copy-of select="context/transient/brukerAdresse"/>
          </xsl:if>
          <!-- a for-each transform: "epsFnrListe"(fnrListe) to "epsFnrListe"(fnrListe) -->
          <xsl:for-each select="context/transient/epsFnrListe">
            <xsl:copy-of select="."/>
          </xsl:for-each>
          <!-- a simple data mapping: "context/transient/brukerFnr"(string) to "brukerFnr"(string) -->
          <xsl:if test="context/transient/brukerFnr">
            <brukerFnr>
              <xsl:value-of select="context/transient/brukerFnr"/>
            </brukerFnr>
          </xsl:if>
        </transient>
      </context>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out3:hentTPSDataRequestMsg'"/>
        </xsl:attribute>
        <out2:hentTPSData>
          <tpsPersonDataReq>
            <tpsServiceRutine>
              <!-- a simple mapping with no associated source:  to "serviceRutinenavn"(<SRnavn>) -->
              <serviceRutinenavn>
                <xsl:text>FS03-FDNUMMER-ADRESSER-M</xsl:text>
              </serviceRutinenavn>
              <!-- a simple mapping with no associated source:  to "aksjonsKode"(<AK>) -->
              <aksjonsKode>
                <xsl:text>A</xsl:text>
              </aksjonsKode>
              <!-- a simple mapping with no associated source:  to "aksjonsKode2"(<AK2>) -->
              <aksjonsKode2>
                <xsl:text>0</xsl:text>
              </aksjonsKode2>
              <M303>
                <!-- a simple mapping with no associated source:  to "adressePrior"(string) -->
                <adressePrior>
                  <xsl:text>2</xsl:text>
                </adressePrior>
              </M303>
              <!-- a simple mapping with no associated source:  to "antallFnr"(<AK2>) -->
              <antallFnr>
                <xsl:text>1</xsl:text>
              </antallFnr>
              <nFnr>
                <!-- a simple data mapping: "context/transient/epsFnrListe[1]/epsFnr"(string) to "fnr"(Tfnr) -->
                <fnr>
                  <xsl:value-of select="context/transient/epsFnrListe[1]/epsFnr"/>
                </fnr>
              </nFnr>
            </tpsServiceRutine>
          </tpsPersonDataReq>
        </out2:hentTPSData>
      </body>
    </io3:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io3:smo" to "io3:smo".  -->
  <xsl:template name="map:hentTPSAdresseForEPS2">
    <xsl:param name="smo"/>
    <context>
      <transient>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io:localVariables'"/>
        </xsl:attribute>
        <!-- a structural mapping: "$smo/context/transient/brukerAdresse"(adresse) to "brukerAdresse"(adresse) -->
        <xsl:if test="$smo/context/transient/brukerAdresse">
          <xsl:copy-of select="$smo/context/transient/brukerAdresse"/>
        </xsl:if>
        <!-- a for-each transform: "epsFnrListe"(fnrListe) to "epsFnrListe"(fnrListe) -->
        <xsl:for-each select="$smo/context/transient/epsFnrListe">
          <xsl:copy-of select="."/>
        </xsl:for-each>
        <!-- a simple data mapping: "$smo/context/transient/brukerFnr"(string) to "brukerFnr"(string) -->
        <xsl:if test="$smo/context/transient/brukerFnr">
          <brukerFnr>
            <xsl:value-of select="$smo/context/transient/brukerFnr"/>
          </brukerFnr>
        </xsl:if>
      </transient>
    </context>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out3:hentTPSDataRequestMsg'"/>
      </xsl:attribute>
      <out2:hentTPSData>
        <tpsPersonDataReq>
          <tpsServiceRutine>
            <!-- a simple mapping with no associated source:  to "serviceRutinenavn"(<SRnavn>) -->
            <serviceRutinenavn>
              <xsl:text>FS03-FDNUMMER-ADRESSER-M</xsl:text>
            </serviceRutinenavn>
            <!-- a simple mapping with no associated source:  to "aksjonsKode"(<AK>) -->
            <aksjonsKode>
              <xsl:text>A</xsl:text>
            </aksjonsKode>
            <!-- a simple mapping with no associated source:  to "aksjonsKode2"(<AK2>) -->
            <aksjonsKode2>
              <xsl:text>0</xsl:text>
            </aksjonsKode2>
            <M303>
              <!-- a simple mapping with no associated source:  to "adressePrior"(string) -->
              <adressePrior>
                <xsl:text>2</xsl:text>
              </adressePrior>
            </M303>
            <!-- a simple mapping with no associated source:  to "antallFnr"(<AK2>) -->
            <antallFnr>
              <xsl:text>1</xsl:text>
            </antallFnr>
            <nFnr>
              <!-- a simple data mapping: "$smo/context/transient/epsFnrListe[1]/epsFnr"(string) to "fnr"(Tfnr) -->
              <fnr>
                <xsl:value-of select="$smo/context/transient/epsFnrListe[1]/epsFnr"/>
              </fnr>
            </nFnr>
          </tpsServiceRutine>
        </tpsPersonDataReq>
      </out2:hentTPSData>
    </body>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
