<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/PINtoFnrSøk.map" md5sum="9d2a318b8092d900103435f0186cbaf0" version="7.0.302" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.302
*
*   Mapping file:		PINtoFnrSøk.map
*   Map declaration(s):	PINtoFnrSøk
*   Input file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252Foppgave-poc%257DMinIDSetWithPIN/message%3D%257Bhttp%253A%252F%252Foppgave-poc%252FSED%257DvaliderOgLagreUtenlandskIdRequestMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252Foppgave-poc%257DMinIDSetWithPIN/message%3D%257Bhttp%253A%252F%252Fnav-lib-frg%252Fno%252Fnav%252Flib%252Ffrg%252Finf%252FPerson%257DhentPersonRequestMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://oppgave-poc/SED"
    xmlns:in2="wsdl.http://oppgave-poc/SED"
    xmlns:out="http://nav-lib-frg/no/nav/lib/frg/fault"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:out2="http://nav-lib-frg/no/nav/lib/frg/inf/Person"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:out3="wsdl.http://nav-lib-frg/no/nav/lib/frg/inf/Person"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:out5="http://nav-lib-frg/no/nav/lib/frg/gbo"
    xmlns:out4="http://stelvio-commons-lib/no/nav/gbo"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io6="http://www.w3.org/2005/08/addressing"
    xmlns:io7="http://oppgave-poc"
    xmlns:map="http://oppgave-poc/xslt/PINtoFnrSøk1"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="xalan str set in msl math map exsl in2 date"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <dataObject>
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io2:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:PINtoFnrSøk2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </dataObject>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io2:smo" mode="map:PINtoFnrSøk"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template match="io2:smo"  mode="map:PINtoFnrSøk">
    <io2:smo>
      <context>
        <!-- a structural mapping: "body/in:validerOgLagreUtenlandskId/minIDSetWithPin"(MinIDSetWithPIN) to "transient"(MinIDSetWithPIN) -->
        <xsl:if test="body/in:validerOgLagreUtenlandskId/minIDSetWithPin">
          <transient>
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io7:MinIDSetWithPIN'"/>
            </xsl:attribute>
            <xsl:call-template name="copyNamespaceDeclarations">
              <xsl:with-param name="root" select="body/in:validerOgLagreUtenlandskId/minIDSetWithPin"/>
            </xsl:call-template>
            <xsl:copy-of select="body/in:validerOgLagreUtenlandskId/minIDSetWithPin/@*|body/in:validerOgLagreUtenlandskId/minIDSetWithPin/node()"/>
          </transient>
        </xsl:if>
      </context>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out3:hentPersonRequestMsg'"/>
        </xsl:attribute>
        <out2:hentPerson>
          <hentPersonRequest>
            <person>
              <!-- a simple data mapping: "body/in:validerOgLagreUtenlandskId/minIDSetWithPin/pinSendingInstitution"(string) to "fodselsnummer"(string) -->
              <xsl:if test="body/in:validerOgLagreUtenlandskId/minIDSetWithPin/pinSendingInstitution">
                <fodselsnummer>
                  <xsl:value-of select="body/in:validerOgLagreUtenlandskId/minIDSetWithPin/pinSendingInstitution"/>
                </fodselsnummer>
              </xsl:if>
            </person>
          </hentPersonRequest>
        </out2:hentPerson>
      </body>
    </io2:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template name="map:PINtoFnrSøk2">
    <xsl:param name="smo"/>
    <context>
      <!-- a structural mapping: "$smo/body/in:validerOgLagreUtenlandskId/minIDSetWithPin"(MinIDSetWithPIN) to "transient"(MinIDSetWithPIN) -->
      <xsl:if test="$smo/body/in:validerOgLagreUtenlandskId/minIDSetWithPin">
        <transient>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io7:MinIDSetWithPIN'"/>
          </xsl:attribute>
          <xsl:call-template name="copyNamespaceDeclarations">
            <xsl:with-param name="root" select="$smo/body/in:validerOgLagreUtenlandskId/minIDSetWithPin"/>
          </xsl:call-template>
          <xsl:copy-of select="$smo/body/in:validerOgLagreUtenlandskId/minIDSetWithPin/@*|$smo/body/in:validerOgLagreUtenlandskId/minIDSetWithPin/node()"/>
        </transient>
      </xsl:if>
    </context>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out3:hentPersonRequestMsg'"/>
      </xsl:attribute>
      <out2:hentPerson>
        <hentPersonRequest>
          <person>
            <!-- a simple data mapping: "$smo/body/in:validerOgLagreUtenlandskId/minIDSetWithPin/pinSendingInstitution"(string) to "fodselsnummer"(string) -->
            <xsl:if test="$smo/body/in:validerOgLagreUtenlandskId/minIDSetWithPin/pinSendingInstitution">
              <fodselsnummer>
                <xsl:value-of select="$smo/body/in:validerOgLagreUtenlandskId/minIDSetWithPin/pinSendingInstitution"/>
              </fodselsnummer>
            </xsl:if>
          </person>
        </hentPersonRequest>
      </out2:hentPerson>
    </body>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
