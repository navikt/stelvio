<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/PersonIkkeFunnetToNavnesøk.map" md5sum="d3438fe78be315f146d8680a2a6b0aac" version="7.0.302" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.302
*
*   Mapping file:		PersonIkkeFunnetToNavnesøk.map
*   Map declaration(s):	PersonIkkeFunnetToNavnesøk
*   Input file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252Foppgave-poc%257DMinIDSetWithPIN/message%3D%257Bhttp%253A%252F%252Fnav-lib-frg%252Fno%252Fnav%252Flib%252Ffrg%252Finf%252FPerson%257DfinnPerson_faultPersonIkkeFunnetMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252Foppgave-poc%257DMinIDSetWithPIN/message%3D%257Bhttp%253A%252F%252Foppgave-poc%252FPerson%257DavklarIdentitetRequestMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://nav-lib-frg/no/nav/lib/frg/fault"
    xmlns:in2="http://nav-lib-frg/no/nav/lib/frg/inf/Person"
    xmlns:in3="wsdl.http://nav-lib-frg/no/nav/lib/frg/inf/Person"
    xmlns:in5="http://stelvio-commons-lib/no/nav/gbo"
    xmlns:in4="http://nav-lib-frg/no/nav/lib/frg/gbo"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:out="http://oppgave-poc/Person"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:out2="wsdl.http://oppgave-poc/Person"
    xmlns:io7="http://www.w3.org/2005/08/addressing"
    xmlns:io6="http://oppgave-poc"
    xmlns:map="http://oppgave-poc/xslt/PersonIkkeFunnetToNavnesøk"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="set in msl math exsl in2 in3 date in4 in5 xalan str map"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <dataObject>
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io2:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:PersonIkkeFunnetToNavnesøk2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </dataObject>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io2:smo" mode="map:PersonIkkeFunnetToNavnesøk"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template match="io2:smo"  mode="map:PersonIkkeFunnetToNavnesøk">
    <io2:smo>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out2:avklarIdentitetRequestMsg'"/>
        </xsl:attribute>
        <out:avklarIdentitet>
          <!-- a structural mapping: "context/transient"(MinIDSetWithPIN) to "minIDSetWithPin"(MinIDSetWithPIN) -->
          <minIDSetWithPin>
            <xsl:call-template name="copyNamespaceDeclarations">
              <xsl:with-param name="root" select="context/transient"/>
            </xsl:call-template>
            <xsl:copy-of select="context/transient/@*|context/transient/node()"/>
          </minIDSetWithPin>
        </out:avklarIdentitet>
      </body>
    </io2:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template name="map:PersonIkkeFunnetToNavnesøk2">
    <xsl:param name="smo"/>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out2:avklarIdentitetRequestMsg'"/>
      </xsl:attribute>
      <out:avklarIdentitet>
        <!-- a structural mapping: "$smo/context/transient"(MinIDSetWithPIN) to "minIDSetWithPin"(MinIDSetWithPIN) -->
        <minIDSetWithPin>
          <xsl:call-template name="copyNamespaceDeclarations">
            <xsl:with-param name="root" select="$smo/context/transient"/>
          </xsl:call-template>
          <xsl:copy-of select="$smo/context/transient/@*|$smo/context/transient/node()"/>
        </minIDSetWithPin>
      </out:avklarIdentitet>
    </body>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
