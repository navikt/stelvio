<?xml version="1.0" encoding="UTF-8" ?>
<!-- faces-security-config.xml template -->
<!-- Frank Nimphius, version 1.0 -->
<!-- based on com.groundside.jsf.schema.faces-security-config schema-->
<jsf-application xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="com.groundside.jsf.security ../../src/com/groundside/jsf/schema/faces-security-config.xsd"
                 xmlns="com.groundside.jsf.security">
<!-- Must provide http port and https port. The default setting is     -->  
<!-- 80 and 443. Set keep-ssl-mode to true if you don't want to switch -->
<!-- back to http once SSL connection is established -->
  <ssl-config>
    <http-port>80</http-port>
    <https-port>443</https-port>
    <keep-ssl-mode>false</keep-ssl-mode>
  </ssl-config>
<!-- requires-authentication set to true will enforce authentication for a page -->
<!-- though  it may not require authorization-->
<!-- requires-authorization enforces security checks to be performed for the page -->
<!-- requires-authorization implicitly sets requires-authentication to true -->
<!-- requires SSL enforces a redirect to the SSL port to handle the page request  -->
<!-- if keep-ssl-mode is set to true, the application continues with SSL no matter -->
<!-- what the page requirement is -->
  <jsf-page requires-authentication="false" requires-authorization="true" requires-ssl="false">
    <page-name>/public/start.jsp</page-name>
<!-- role-concatination can be AND or OR. In the AND scenario a user must be a member of -->    
<!-- all roles for the authorization to suceed. OR is the normal way of J2EE authorization -->
<!-- an requires the user to be in one of the mentioned J2EE roles -->
    <j2ee-roles role-concatination="AND">
<!-- J2EE roles defined in web.xml. Note that you can use role names that are different -->
<!-- from roles specified in web.xml. in this case you use the role-ref element on the -->
<!-- JavaServer Faces servlet to map the used roles to existing web.xml roles -->
      <role-name>manager</role-name>
      <role-name>user</role-name>
    </j2ee-roles>
  </jsf-page>
</jsf-application>
