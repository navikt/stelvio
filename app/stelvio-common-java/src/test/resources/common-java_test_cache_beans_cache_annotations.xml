<?xml version="1.0" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop     http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring 
       http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">

<!-- 	 <context:annotation-config /> --> 
	 <ehcache:annotation-driven /> 

	<ehcache:config cache-manager="cacheManager">
		<ehcache:evict-expired-elements interval="60" />
	</ehcache:config>

		<!-- Do not use autoproxy in combination with aop:config -->
<!--	<bean id="autoproxy" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />-->

	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
	  <property name="configLocation" value="/test-ehcache.xml" />
	  <property name="shared" value="true" />
	</bean>
<!-- 
	<bean id="cachingListener" class="no.stelvio.common.cache.CustomCachingListener" />
	 -->
	<bean id="testCache" class="no.stelvio.common.cache.support.DefaultTestCache" />

  	<bean id="navAnsattService" class="no.stelvio.common.cache.support.DefaultNAVAnsatt" />

	<bean id="cacheManagement" class="no.stelvio.common.cache.support.DefaultCacheManagement">
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	
	<bean id="cacheManagementProxy" class="org.springframework.jmx.access.MBeanProxyFactoryBean">
		<property name="objectName" value="bean:name=cacheManagement"/>
		<property name="proxyInterface" value="no.stelvio.common.cache.CacheManagement"/>
	</bean>
	
	
<!-- 	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
		<property name="beans">
			<map>
				<entry key="bean:name=cacheManagement" value-ref="cacheManagement" />
			</map>
		</property>
	</bean> -->
	 

<!-- 	<bean id="cachingInterceptor" class="org.springmodules.cache.interceptor.caching.MetadataCachingInterceptor">
	  <property name="cacheProviderFacade" ref="cacheProviderFacade" />
	  <property name="cachingAttributeSource" ref="cachingAttributeSource" />
	  <property name="cachingListeners">
	    <list>
	      <ref bean="cachingListener" />
	    </list>
	  </property>
	  <property name="cachingModels">
	    <props>
	      <prop key="non-persistent">cacheName=sampleCache4</prop>
	      <prop key="persistent">cacheName=sampleCache5</prop>
	    </props>
	  </property>
	</bean>	 -->
<!--	<bean id="cachingAttributeSourceAdvisor" class="org.springmodules.cache.interceptor.caching.CachingAttributeSourceAdvisor">
	  <constructor-arg ref="cachingInterceptor" />
	</bean> -->
	
<!-- 	<bean id="flushingAttributeSource" class="org.springmodules.cache.annotations.AnnotationFlushingAttributeSource" />
 -->	
<!-- 	<bean id="flushingInterceptor" class="org.springmodules.cache.interceptor.flush.MetadataFlushingInterceptor">
	  <property name="cacheProviderFacade" ref="cacheProviderFacade" />
	  <property name="flushingAttributeSource" ref="flushingAttributeSource" />
	  <property name="flushingModels">
	    <props>
	      <prop key="flushingModel">cacheNames=sampleCache4</prop>
	    </props>
	  </property>
	</bean> -->
	
<!--	<bean id="flushingAttributeSourceAdvisor" class="org.springmodules.cache.interceptor.flush.FlushingAttributeSourceAdvisor">
	  <constructor-arg ref="flushingInterceptor" />
	</bean> -->
	
	<!-- AOP Configuration   -->	
	<!-- <aop:config>
	  <aop:pointcut id="defaultCache" 
	        expression="execution(* no.stelvio.common.cache.support.DefaultTestCache.*(..))"/>	

      <aop:advisor
		pointcut-ref="defaultCache"
		advice-ref="flushingInterceptor"/>			

       <aop:advisor
		pointcut-ref="defaultCache"
		advice-ref="cachingInterceptor"/>	
	
	</aop:config>	 -->	
	
</beans>