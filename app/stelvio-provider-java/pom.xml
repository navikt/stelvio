<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>stelvio</artifactId>
		<groupId>no.stelvio</groupId>
		<version>1.7.2-SNAPSHOT</version>
	</parent>
	<groupId>no.stelvio</groupId>
	<artifactId>stelvio-provider-java</artifactId>
	<name>stelvio - provider</name>
	<dependencies>
		<dependency>
			<!-- Stelvio common library -->
			<groupId>no.stelvio</groupId>
			<artifactId>stelvio-common-java</artifactId>
			<version>${pom.version}</version>
		</dependency>
		<dependency>
			<!--  Stelvio DTO are used in the provider layer for data transfer objects -->
			<groupId>no.stelvio</groupId>
			<artifactId>stelvio-dto-java</artifactId>
			<version>${pom.version}</version>
		</dependency>
		<dependency>
			<groupId>no.stelvio</groupId>
			<artifactId>stelvio-domain-java</artifactId>
			<version>${pom.version}</version>
		</dependency>
		<dependency>
			<!-- Apache commons-lang library provides a host of helper utilities that extend the standard java.lang API, for example String manipulation methods. -->
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<!-- Apache commons-logging is the main logging framework used as a facade for application logging. -->
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
				<exclusion>
					<artifactId>avalon-framework</artifactId>
					<groupId>avalon-framework</groupId>
				</exclusion>
			</exclusions>			
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<!-- spring-context is a Spring core library used for configuration and dependency injection. Builds on the spring-beans library. -->
			<artifactId>spring-context</artifactId>
			<groupId>org.springframework</groupId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
		</dependency>
		<dependency>
			<groupId>net.sf.dozer</groupId>
			<artifactId>dozer</artifactId>
			<version>5.2.2</version>
		</dependency>
		<dependency>
		   <groupId>org.apache.xmlbeans</groupId>
		   <artifactId>xmlbeans</artifactId>
		   <version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.5.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock</artifactId>
			<version>2.1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.1_3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<!-- This is necessary to exclude running all classes named Test*.java as unit tests -->
				<artifactId>maven-surefire-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
		</plugins>
		<!-- Prevents ClearCase(*.db)-files being copied into target folder-->
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>**/*.db</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/java</directory>
				<excludes>
					<exclude>**/*.db</exclude>
				</excludes>
			</resource>
		</resources>
		<!-- Prevents ClearCase(*.db)-files being copied into target folder-->
		<testResources>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
				<excludes>
					<exclude>**/*.db</exclude>
				</excludes>
			</testResource>
		</testResources>
	</build>
</project>