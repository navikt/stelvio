<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<!-- Creates the registry of flow definitions for this application. -->

	<!-- Launches new flow executions and resumes existing executions: Spring 1.2 config version -->
	<bean id="flowExecutor" class="org.springframework.webflow.config.FlowExecutorFactoryBean">
		<property name="definitionLocator" ref="flowDefinitionLocator"/>
		<property name="repositoryType">
			<bean class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
				<property name="staticField" value="org.springframework.webflow.config.RepositoryType.CONTINUATION"/>
			</bean>
		</property>
	</bean>

	<!-- Creates the registry of flow definitions for this application: Spring 1.2 config version -->
	<bean id="flowDefinitionLocator" class="org.springframework.webflow.engine.builder.xml.XmlFlowRegistryFactoryBean">
		<property name="flowLocations">
			<list>
				<value>/WEB-INF/flows/*-flow.xml</value>
				<value>/WEB-INF/flows/**/*-flow.xml</value>
			</list>
		</property>
	</bean>

	<!-- Creates, saves, and restores managed flow executions -->

	<!--
		Spring configured flow navigation handler delegate, allowing for custom configuration
		using standard dependency injection techniques.
		
		Note: this definition is optional; you may choose to simply specify your FlowNavigationHandler
		in your faces-config.xml if its defaults meet your needs.
	-->
	<bean class="org.springframework.webflow.executor.jsf.FlowNavigationHandler" id="jsfNavigationHandler"/>
	<!-- property name="repositoryFactory" ref="repositoryFactory" / -->

	<!--
		Spring configured flow phase listener delegate, allowing for custom configuration using
		standard dependency injection techniques.
		
		Note: this definition is optional; you may choose to simply specify your FlowPhaseListener
		in your faces-config.xml if its defaults meet your needs.
	-->
	<bean class="org.springframework.webflow.executor.jsf.FlowPhaseListener" id="flowPhaseListener"/>
	<!-- property name="repositoryFactory" ref="repositoryFactory" / -->

	<bean id="prs.starexample.saksbehandlerService"
	      class="org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean">
		<property name="jndiName" value="ejb/SaksbehandlerService"/>
		<property name="resourceRef" value="true"/>
		<property name="businessInterface" value="no.nav.service.pensjon.saksbehandling.service.SaksbehandlerService"/>
	</bean>

	<bean id="prs.starexample.henvendelseService"
	      class="org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean">
		<property name="jndiName" value="ejb/HenvendelseService"/>
		<property name="resourceRef" value="true"/>
		<property name="businessInterface" value="no.nav.service.pensjon.henvendelse.HenvendelseService"/>
	</bean>

	<!-- CodesTable setup -->
	<bean id="prs.starexample.codesTableManager" class="no.stelvio.common.codestable.support.DefaultCodesTableManager">
		<property name="codesTableFactory" ref="prs.starexample.codesTableFactory"/>
	</bean>
	<bean id="prs.starexample.codesTableInitializer"
	      class="no.stelvio.common.codestable.factory.support.DefaultCodesTableInitializer">
		<property name="codesTableManager" ref="prs.starexample.codesTableManager"/>
		<property name="codesTablePeriodicClasses">
			<list>
				<value>no.nav.domain.pensjon.codestable.HenvendelseTypeCti</value>
			</list>
		</property>
	</bean>

	<bean id="prs.starexample.codesTableFactory"
	      class="org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean">
		<property name="jndiName" value="ejb/CodesTableFactory"/>
		<property name="resourceRef" value="true"/>
		<property name="businessInterface" value="no.stelvio.common.codestable.factory.CodesTableFactory"/>
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="resources"/>
	</bean>
</beans>
