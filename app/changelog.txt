STELVIO CHANGELOG
=================
http://confluence.adeo.no/display/stelvio/Architecture


Changes in version 1.0.2 (15.2.2007)
------------------------------------

General
* Upgraded Spring to version 2.0.2
* Upgraded Spring WebFlow to version 1.0.1
* Upgraded Spring Modules Cache to version 0.7

Module stelvio-common-java
* Added support for validating that a code is present in a codes table [Defect #265]
* Usage of Locale in codes table items have been deprecated; internationalization of decodes will be handled by standard
  jdk support (properties files)
* Made ServiceRequest and ServiceResponse abstract to explicitly state that they are base classes that must be extended
* Methods on ServiceRequest for setting/retrieving RequestContext are deprecated as client code should not work with
  RequestContext directly; access it through RequestContextHolder instead
* Deprecated TransferObject in favour of ServiceRequest/ServiceResponse
* Changed implementations of CodesTable and CodesTablePeriodic that potentially improves performance (decreased uses of
  loops)
* getDecode in CodesTable and CodesTablePeriodic may now throw ItemNotFoundException in addition to
  DecodeNotFoundException
* Made ServiceRequest and ServiceResponse abstract to explicitly state that they are base classes that must be extended

Module stelvio-test-java

Module stelvio-domain-java

Module stelvio-repository-java

Module stelvio-batch-java

Module stelvio-service-java

Module stelvio-presentation-java
* Upgraded Spring Modules Validation to version 0.7
* Components for help taglib has been added. The taglib consist of three components: HelpDisplayAreaComponent,
  HelpInPageComponent and HelpPopUpComponent. These components also have a common HelpUtils class, with package locale
  utility metodes used by the help components. Resources for these components has been added to src/main/resources. 
* Added two classes for handling resources in pages, StelvioResourceHandler and StelvioResourceLoader. These are used by
  the help components.
* Added a faces-config.xml with definitions of the custom stelvio components under src/main/resources/META-INF
* Removed MenuComponent and MenuItemComponent. The menus used in stelvio should be based on the tomahawk panelNavigation2 
  component.
* Added a custom action class for fetching menu items and convert them into panelnavigation items used by the 
  panelNavigation2 component.

Star example
* Corrected package structure (no.nav... -> no.stelvio.star.example...)
* Added consumer layer


Changes in version 1.0.1 (17.1.2007)
------------------------------------

General
* Added module stelvio-star-example which will hold a complete example of an implementation of a JEE application based
  on the Stelvio application architecture
* Added module stelvio-service-java
* Added module stelvio-repository-java

Module stelvio-common-java
* Added configuration (using the configuration mechanism defined by the JAR file service provider contract in JDK 1.3
  and above) in META-INF/services/org.apache.commons.logging.LogFactory to make sure commons-logging is using an
  application's log4j.properties and not Websphere's own
* Removed remnants of rtv-framework
* Refactored the 2 aspects of RequestContext, current thread handling and data container, into 2 new classes
  * RequestContext -> plain POJO holding specific values, like user id, screen id, etc
  * RequestContextHolder -> holds a RequestContext on the current thread
* Simplified transfer object support
  * No need for Entity(List)Response
  * No need for interfaces
  * 2 concrete classes, ServiceRequest and ServiceResponse, are left -> should be extended by transfer objects
* Cleaned up codes table code
  * Removed deprecated methods
  * Added getItems() on CodesTablePeriodic so the interface is equal to CodesTable
  * Improved documentation of which exceptions are thrown 
* Improved naming and structure of Error package
* No need to implement a constructor only used by Stelvio when removing cause; reflection is used instead
* Created a Stelvio SecurityContext which holds the user id and has methods for role checking
* Column mapping in CodesTable domain classes changed from Norwegian to English; should be overridden using
  AttributeOverride annotations in subclasses
* Fixed CodesTableFactory to generate a CodesTable/CodesTablePeriodic instead of returning a list
* Added Id annotation to indicate primary key; is placed in the top level mapped superclass as it should be the key for
  all codestables
* Fixed usage of serialVersionUID in CodesTable exception classes
* Model id for the CodesTable cache is changed to enable easier separation from other caches
* Split SecurityContext and RequestContext into interface and implementation to enable easier testing and extension
* Removed user id from RequestContext as it is in SecurityContext
* Added builder to RequestContext which makes it easier to build a new instance of it, especially when one should only
  update some of the properties in the current version
* Removed unused classes
* Cleanup of package structure for easier use

Module stelvio-test-java
* Fixed package structure (no.stelvio.common.test -> no.stelvio.test)

Module stelvio-domain-java
* Added domain object Pid, used to represent a Personal Identification number. Includes validation methods.
* Moved domain objects in common for menu here
* Moved domain objects in common for tasklist here
* Removed constructor fron PidValidationException using deprecated ExceptionCopyholder

Module stelvio-repository-java
* Moved repository classes in common for menu here
* Moved repository classes in common for tasklist here 
* Added repository classes for CodesTable
* Changed method signature in CodesTable classes, using generics to specify that the class passed as a param to the
  fetchCodesTable method must be an AbstractCodestableItem implementation
* Added full Hibernate implementation of CodesTableRepository

Module stelvio-batch-java

Module stelvio-service-java
* Moved service classes in common for menu here
* Moved service classes in common for tasklist here
* Added implementation of CodesTableFactory that retrieves codes tables from a repository
* Added MenuItemServiceResponse object to be used by MenuService
  * Is used in MenuItemService instead of deprecated EntityListResponse as the return value

Module stelvio-presentation-java
* Renamed package from no.stelvio.web to no.stelvio.presentation
* Removed remnants of rtv-framework
* Added no.stelvio.presentation.jsf.event.RequestContextPhaseListener, this phaselistener is responsible for updating 
  the screenId in the RequestContext object. This used to be done in RequestContextFilter, but this caused a 
  NullPointerException because the filter runs before the FacesContext and SWF Context are initialized. 
* Added no.stelvio.presentation.constants.ConstantsWrapper. Wrapper class for handling constants in the presentation 
  layer. Provides functionality to extract constants from a given class as a map.
* Added SecurityContextFilter and its parse classes; this filter initializes the SecurityContext
* Cleanup of package structure for easier use
* Fixed class names in security packages to support the naming standard
  * Also changed to use Jee (earlier J2ee) in class names as Stelvio is running mostly on a JEE platform now
* Changed all filters to inherit from Spring's OncePerRequestFilter instead of our own deprecated filter super class
* Updated page security to use the SecurityContext instead of the HttpServletRequest for security checks

Star example
* Added namedquery to retrieve all HenvendelseTypeCti from database
* Moved repository classes for CodesTable to stelvio-repository
* Changed table-mapping; physical database uses T_ prefix for tables
* Column mapping names should be in upper case
* Added integration test of CodesTable APIs
* Use saksbehandling as the package name, not psak; moved all code used in psak over til saksbehandling

