STELVIO CHANGELOG
=================
http://confluence.adeo.no/display/stelvio/Architecture

Changes in version 1.0.5.4 (01.11.07)
-----------------------------------
Module stelvio-common:
stelvio-common-error
* ExceptionHandlerStrategyChain will now continue executing strategies in chain if one or more strategies fail. If strategies fail, it will always execute the FallbackExceptionHandler
  as well before returning (#NAV00020661)
* LoggerExceptionHandlerStrategy is more robust, will log messages even when ErrorDefinitionResolver isn't working (or hasn't been injected)(#NAV00020628).
* LoggerExceptionHandlerStrategy now uses the  classname where the exception was created as the name of the logger instead of always using LoggerExceptionHandlerStrategy as the logname,
  making it easier to monitor the logs based on the origin of the exception (#NAV00020865).
* New component NullErrorDefinitionResolver, will always return null when resolve(Throwable) is called. 
  Used by the framework only, when no other ErrorDefinitionResolver can be created. (NAV00020666)
* ErrorDefinitionResolverFactoryBean will revert to returning a NullErrorDefinitionResolver if ErrorDefinitionResolverFactoryBean 
  has been misconfigured or the underlying database is down. (NAV00020666)
* CommonExceptionLogic changed to retrieve userID from RequestContext instead of SecurityContext. Former solution would only work properly in presentation layer components (#NAV00020877).

stelvio-common-security
* Improved safety on usercontext-switching when generating LTPA-tokens for ESB-calls in SecurityHeader. (#NAV00019037)

Module stelvio-batch:
* New methods for throwing exceptions, using the type safe ExceptionHandlerFacede-methods. Old methods that are not type safe have been deprecated (#NAV00018944).
* New interceptor, BatchInitRequestContextInterceptor, to initialize the thread-bound RequestContext for Batch Jobs that aren't passed the RequestContext as a start-up parameter. (#NAV00018709)

Module stelvio-service:
* New component LazyObjectgraphLoader for initializing lazy loaded collections in the service layer before the object graph is detached (#NAV00021157)

Module stelvio-presentation:
stelvio-presentation-security
* Correct nullpointer exception (SIR#NAV00019574) in WasLogoutService. (#NAV00020094)
* SecurityContextFilter - Change filter after Security QA (SIR#NAV00019546) to build up SecurityContext directly from the request.getRemoteUser() call
  on every request and remove usage of HttpSession (#NAV00019758)
  NOTE! In Websphere Application Server the following option must be enabled for this to work:
  Security -> Secure administration, application, and infrastructure -> WebSecurity -> General Settings - > 'Use available authentication data when an unprotected URI is accessed'.

stelvio-presentation-swf
* New exceptionHandler, ErrorPageExceptionHandler, and flowExecutionListener, ExceptionHandlerFlowExecutionLister, to correct problems with error handling in Spring Web Flow (#NAV00020904)
* Fixed problems with ErrorAction (#NAV00020906)



Changes in version 1.0.5.3 (03.10.2007)
---------------------------------------
* Updates to code checklists, PP17_GDMA_32(#NAV00017198)

Module stelvio-common:
* Make Bbanvalidator accessible (SIR#NAV00016395)
* Removed the dependency to the stelvo-common test classes from the Common, Provider and Service projects (#NAV00004339, #NAV00016987)
* Changed framework classes that use context holders(i.e. SecurityContextHolder, RequestContextHolder, ServiceRequest), 
  to use non-deprecated context methods(#NAV00018262)

stelvio-common-codestable:
* Changed hierarchy for exeptions that inherited wrong base exception (#NAV00017550)
* Added interface methods for retrieval of item sets for periodic codestableitems (CR#NAV00016823)

stelvio-common-context:
* Changed loglevels in PrepareServiceRequestInterceptor(#NAV00016957)

stelvio-common-error:
* Fixed order in ExceptionHandlerStrategyChain(SIR#NAV00016677)
* Added ClassNameErrorDefinitionResolver for easier error definition that does not instantiate all exception classes (#NAV00016722)
* Chain strategy must handle that the order of applied strategies are not set(SIR#NAV00016677)
* LoggerExceptionHandlerStrategy now supports setting log name through the new setLogName-method (#NAV00017601)
* Base class of InvalidArgumentException changed to FunctionalUnrecoverableException(#NAV00017388)
* Deprecated type unsafe throwNew(...)-methods in ExceptionHandler(#NAV00017136)

stelvio-common-security
* Added namespace information to the SOAP header element created in ConsumerContextHandler(#NAV00016565)

stelvio-common-transferobject:
* Moved PrepareServiceRequestInterceptor and ExecuteServiceRequestInterceptor here. Deprecated old locations (#NAV00017139)

Module stelvio-domain
* Implemented the Comparable interface in the MenuItem class, in order to ensure the ordering of a MenuItems children. MenuItems 
  are sorted according to the order attribute (#NAV00017566)
* Implemented proper toString() in ChangeStamp (#NAV00017433)

Module stelvio-presentation
* Changed the way the flow session is retrieved in RequestContextPhaseListener in order to prevent exceptions from beeing thrown
  from Spring Web Flow. These exceptions may cause flow execution locks (#NAV00017592)
* Added new constructor in PagedSortableList that in addition to the already existing constructor accepts a boolean value to decide
  whether the list should be ascending og descending (#NAV00017635)
* Fixed problem with nullpointer exeptions for columns with null values in PagedSortableList (#NAV0017804)


Changes in version 1.0.5.2 (11.09.2007)
---------------------------------------
General
* Upgraded the Spring framework dependencies to version 2.0.4

Module stelvio-domain-java
* Removed the attribute acceptSpecialCircumstance

Changes in version 1.0.5.1 (06.09.2007)
---------------------------------------

Module stelvio-common-java
* Update the compareTo method in AbstractCodesTablePeriodicItem to compare null values correctly (#NAV00008124)
* PrepareServiceRequestInterceptor no longer causes NullPointerException (#NAV00008660)
* LoggerExceptionHandlerStrategy now logs the exception in addition to the exception message. This makes it possible to log the stacktrace with log4j. (#NAV00008772)

Module stelvio-domain-java
* Made method get4DigitYearOfBirth in Pid public (#NAV00010141)

Module stelvio-presentation-java
* Removed all classes dependent upon Spring Web Flow, and moved these into the new module stelvio-presentation-swf-java
* Removed the Spring Web Flow dependency from pom.xml 

Module stelvio-provider-java
* Added debug statements to MorphToSdk14ExceptionHandlerStrategy to the debugging process for developers. (#NAV00009592)

Module stelvio-dto-java
* Updated RequestcontextDto to reflect changes made to RequestContext in Stelvio Common release 1.0.5 (#NAV00008646)

Module stelvio-presentation-security-page (merged in from Stelvio 1.0.4.9)
* Updated page security classes to better cope with Spring WebFlow (#NAV00006194)
  - JeeSecurityPhaselistener
  - Added ExternalViewIdExtractor - an interface to no.stelvio.presentation.jsf.security.webflow.WebflowViewIdExtractor.java
* Updated and added several classes for better error handling in the page security components,
  in particular the JeeSecurityPhaselistener (#NAV00001882)

New Module stelvio-presentation-swf-java
* Created this new module, it should contain all classes that depends on Spring Web Flow.
* Moved the classes ErrorAction.java and RequestContextPhaseListener.java from stelvio-presentation-java and into this module
* Moved the classes SecurityFlowNavigationHandler.java and WebFlowViewIdExtractor.java from stelvio-presentation-java (in Stelvio 1.0.4.9) into this module

New Module stelvio-presentation-eai (merged in from Stelvio 1.0.4.9)
* Added classes to support authentication through an External Authentication Interface (EAI) and WebSEAL, a reverse-proxy from IBM's Tivoli suite.


Changes in version 1.0.5 (27.08.07)
-----------------------------------

Module stelvio
* Updated the layer models in Confluence(#NAV00006774)
* Updated RSA UML model (#NAV00005988)

Module stelvio-consumer-java 
* Reorganized consumer support classes to new package locations. Deprecated the old ones (#NAV0005802)
  - no.stelvio.consumer.ConsumerSystemException->  no.stelvio.consumer.exception.ConsumerSystemException
  - no.stelvio.consumer.support.ConsumerContextHandler->no.stelvio.consumer.ws.ConsumerContextHandler
  - no.stelvio.consumer.support.ConsumerFacadeBase->no.stelvio.consumer.ws.ConsumerFacadeBase
  - no.stelvio.consumer.support.LTPASecurityHandler->no.stelvio.common.security.ws.LTPASecurityHandler
  - no.stelvio.consumer.support.SecurityHeader->no.stelvio.common.security.ws.SecurityHeader

Module stelvio-domain-java
* Modified the validation of Pid to allow for special circumstances when requested to do so using a flag.Special circumstances are where the personnummer is 00000 or 00001 (#NAV00007037)

Module stelvio-presentation-java
* Upgraded the MyFaces libraries to 1.1.5 (#NAV00004897)
* Updated architecture principles for Spring Work Flow (#NAV00006078)
* Upgraded the Spring Work Flow to 1.0.4 (#NAV00004526, #NAV00005439)
* New JSF-converter for enum classes (#NAV00005389, #TD170)

Module stelvio-provider-java
* Updated dependencies to test packages in stelvio-common (#NAV00004510)
* Resolved problem with mapping of RuntimeExceptions. Modified provider to allow for mapping of checked exceptions via Dozer (#NAV00001618)

Module stelvio-star-example
* Excluded el-sun from the JEE libraries and the web manifest file (#NAV00005440)
* Renamed provider layer classes according to the naming standards (#NAV00003271)

Changes in version 1.0.4.10 (TBD)
-----------------------------------
stelvio-common-codestable
* Added getter for id-field in IdAsKeyCodesTableItem and IdAsKeyCodesTablePeriodicItem (#NAV00008941)

stelvio-common-error
* Added passing of throwable to log4j-calls in LoggerExceptionHandlerStrategy (see logMessage method)


Changes in version 1.0.4.8 (23.08.07)
-------------------------------------

Module stelvio-domain-java 
* Modified the validation of Pid to allow for special circumstances where the personnummer is 00000 or 00001. (#NAV0007013)



Changes in version 1.0.4.7 (16.08.07)
-------------------------------------

Module stelvio-common-java
stelvio-common-codestable
* Support for codestables that can be filtered according to valid historical date. Two new methods added to AbstractCodesTable for retrieving CodesTableItems for 
  specified day, and for today. (#NAV00003126)
* Changed hashCode implementation in AbstractCodesTableItem(#NAV00005403) and AbstractCodesTablePeriodicItem(#NAV00005262)
* New component DecodeComparator for sorting Lists (not Sets) of CodesTableItems according to decode.

stelvio-common-config
* New component ExecuteServiceRequestInterceptor to support copying of RequestContext from ServiceRequest at the client to the RequestContextHolder. (#NAV00003380)
* New component ComponentIdHolder for configuring a component id
* New schema for easy configuration of Stelvio component.
* New properties on Requestcontext accessible through getUserId and getComponentId, deprecated getProcessId

stelvio-common-context
* New components to support copying of RequestContext from RequestContextHolder at the client to the ServiceRequest. (#NAV00003380)

stelvio-common-error
* Changes made to StaticErrorDefinitionResolver and ErrorDefinitionResolverFactoryBean to support multiple ErrorDefinitions
  in the database for each Exception class. (One definition per number of arguments passed to Exception)  (#NAV00005442)

Module stelvio-consumer-java
* Support for ApplicationId in SOAP header (#NAV00005432)

Module stelvio-domain-java 
* Modified the validation of PID to allow for special circumstances where the personnummer is 00000 or 00001. (#NAV00006391, #NAV00004074, #NAV00005167)
* Fixed calculateAge to calculate the age correctly(#NAV00006260)

Module stelvio-presentation-java
* NullpointerException in RequestContextPhaseListener, added an additional check in order to prevent the NullpointerException (#NAV00006344) 
* Added @id annotation to the EnumConverter class (#NAV00005677)
* Added a generic converter for enum classes, for conversion from Enums to String and vice versa. (#NAV00003132)
* Added CodesTableItemSelectOneMenu, a custom component for populating dropdown lists with elements from
  a given codes table item or codes table item periodic class. Also added faces-config.xml configuration
  for this component making it redundant to add the component definition in the application specific 
  faces-config.xml configuration file. (#NAV00003131)
* RequestContextFilter sets ComponentId on Requestcontext
* SecurityContextFilter sets userId on RequestContext



Changes in version 1.0.4.6 (24.07.07)
-----------------------------------
Module stelvio-common-java
stelvio-common-codestable
* CodesTable now supports CodesTablePeriodicItems with same code but different decodes as long as the periods don't overlap. (#NAV00005277)


Changes in version 1.0.4.5 (09.07.07)
-----------------------------------

Module stelvio-common-java
stelvio-common-codestable
* Fixed problem with the comparable implementation in CodesTableItem and CodesTablePeriodicItem (#NAV00005251)
* Fixed problem where equals in AbstractCodesTablePeriodicItem threw NullPointerException when toDate was null (#NAV00005226)
* Fixed AbstractCodesTablePeriodicItem equals so that exceptions won't occur when nulls are passed into the method (#NAV00003379)
* Implemented hashCode in AbstractCodesTablePeriodicItem (#NAV00005262)

stelvio-common-error
* DefaultExceptionHandlerFacade now only throws AlreadyHandledException in the case of throw new with an instance
  that has already been thrown.
* Made changes to Abstract exceptions to ease mapping between domain and dto exceptions

Module stelvio-provider-java
* Minor changes to MorphToSdk14ExceptionHandlerStrategy now checks for RecoverableDTOException

Module stelvio-provider-dto
* Made changes to Abstract DTO exceptions to ease mapping between domain and dto exceptions


Changes in version 1.0.4.4 (29.06.07)
-----------------------------------
Module stelvio-common-java
stelvio-common-codestable
* Fixed NullPointerException in DefaultCodesTablePeriodic with null-dataset (#NAV00004827)

Module stelvio-provider-java
* New component MorphToSdk14ExceptionHandlerStrategy to transform SE 5.0 exceptions to SE 1.4 compliant versions

Module stelvio-dto-java
* New component ImitatorDtoException to be thrown from the provider layer


Changes in version 1.0.4.3 (27.06.2007)
---------------------------------------

Module stelvio-common-java
stelvio-common-codestable
* Codestable components now support codes with leading numbers and/or non-alpha-numeric values when code-enums implement 
  and adapt the new interface no.stelvio.common.codestable.support.IllegalCodeEnum (#NAV00004625)

stelvio-common-config
* New component EnvironmentAwareResource to be used in conjuction with PropertyPlaceholderConfigurer to support looking up the environment in JNDI.

stelvio-common-error
* New component AbstractOrderedExceptionHandlerStrategy that may be subclassed for ExceptionHandlerStrategies that is to support ordering.
* MorpherExceptionHandlerStrategy now supports ordering of strategies that extend AbstractOrderedExceptionHandlerStrategy
  or directly implement org.springframework.core.Ordered
* The following strategies now support Ordering: ExceptionHandlerStrategyChain, FallbackExceptionHandlerStrategy
  EventPublisherExceptionHandlerStrategy, LoggerExceptionHandlerStrategy, MorpherExceptionHandlerStrategy



Changes in version 1.0.4.2 (20.06.2007)
---------------------------------------

Module stelvio-domain-java
* Changed the *-ToMany relationships in the Menu-component to be implemented using java.util.Set instead of java.util.List.
  This is a work around for a bug (HHH-1718) in Hibernate (#NAV00004552)


Changes in version 1.0.4.1 (18.06.2007)
---------------------------------------

Module stelvio-domain-java
* Changed the JPA mapping of the menuItems list in the MenuItemScreen class from "screens" to "menuItemScreens"


Changes in version 1.0.4 (25.05.2007)
-----------------------------------
General
* Fixed the maven build so it breaks if any of the unit tests fail
* Unit test guidelines and principles (extended version) (TD#244)
* Mocking guidelines and principles (initial version) (TD#243)
* Updated version of JUnit to JUnit4 (#NAV00001215)
* Updated mock and test libraries, Hamcrest 1.0 and JModk 2.0.0-RC1 (#NAV00001191)


Module stelvio-presentation-java
* RequestContextPhaseListener: added check to avoid nullpointerexception. (#NAV00001241)
* The error handling component ErrorAction now provides functionality to retrieve information about where the
  error occured. And the url of the start of the flow where the error occured can be provided. (Defect #33)
* Made it easier to add a message in a web page via FacesContext (TD#189)
* Decription of using inline Javascript (TD#283)

Module stelvio-presentation-help
* Architecture for context sensitive help, (TD#567)


Module stelvio-consumer-java
* Consumer facade interface for help information retrieval has been added, with request/response objects as well. (#NAV00002872)


Module stelvio-provider-java
* Specify how to be a provider to the integration architecture. The integration architecture imposes restrictions 
  in this respect, e.g. interface restrictions and no support for JDK 1.5. Must come up with and describe an 
  additional facade for business providers if no other options succeeds ,e.g. use a post-compiler. (TD#159)
* Prototype JDK1.4 and JDK 1.5 interoperability (TD#568)
* New stelvio-provider module, containing mapper classes for stelvio data objects(#NAV00001114)
* Added the stelvio-provider-java module (#NAV00000842)
* First release includes mappers for Pid/PidDto, ChangeStamp/ChangeStampDto, RequestContext/RequestContextDto, SecurityContext/SecurityContextDto (#NAV00001113)

Module stelvio-repository


Module stelvio-common-java
* Generating property files from Excel spreadsheets (TD#41)

stelvio-common-codestable
* Support for date filter (TD#145)
  Added CodesTablePeriodic.getDecode(...) methods which uses today's date and therefore do not need date as input
* Support for locale (TD#172 , #NAV00001362)
* Support for codestables without requirement for also maintaining the Enum implementations (TD#594->#NAV00002356)
* Support for sortable codestableitems (#NAV00002345)
* Support for codestables where code is not the key(#NAV00002358)
  Added CodesTable{Periodic}.getCodesTableItem(...) and CodesTable{Periodic}.getDecode(...) methods that takes a String
  as code; its validity will be checked by using Enum.valueOf(...)
* Check for overlapping time periods (TD#117, #NAV00002619)
* Remove obsolete hibernate test classes (#NAV00001211)
* Fixed error in codestable duplicate check (#NAV00003160)
* Support for codestable enums with numeric values (#NAV00001407)
* AbstractCodesTable could not find code table because of enumeration (#NAV00000804)
* Made CodesTable/CodesTablePeriodic iterable, that is, they can be used in the new for-each loop in JDK 5

stelvio-common-error
* Improved error handling 
  ErrorDefinition --> Fixed equals and hashcode to work on classname as this should always be set, even in unit tests
  LoggerExceptionHandlerStrategy --> Only log exception if it is not logged before
  StaticErrorDefinitionResolver --> Improved logging and use more specific exceptions
  AbstractCodesTableItem --> Made it possible to call utility method in more cases (#NAV00002641)
* Improve the name of the handle() method, saying more specifically what it does (that is, the exception specified 
  is caught by application code). (#NAV00002634)
* Make throwing a new exception typesafe and IDE-friendly (#NAV00002326)
* RuntimeExceptions being thrown from one layer to another, must be "removed" by Stelvio (#NAV00001593)
* Remove deprecated constructors for cloning exceptions (#NAV00001193)

stelvio-common-mapping
* Mapping framework description. (TD#398)
* Update Dozer dependency to version 3.3.1 (#NAV00003079)

stelvio-common-security
* Deprecated method getClassFromString() in class RoleValidatorUtil (#NAV00003259)

stelvio-common-util
* Added support for the date format ddMMyyyy in DateUtil.parseInputString (#NAV00001763)


Module stelvio-domain-java
* Added domain class for help content. (#NAV00002872)
* Date format error in Pid (#NAV00001045, additional date error to 1.0.3.1 release)
* Changestamp created-fields should not be updateable (#NAV00003305)
* Added calculateAge method to Pid (#NAV00001194)


Module stelvio-dto-java
* Data Transfer Objects for Stelvio domain objects
  New DTOs added: PidDto, ChangeStampDto, RequestContextDto, SecurityContextDto (#NAV00001107)
* Added DTO for many of the exceptions available in Stelvio.
* All instance state in Stelvio exceptions must be mapped in provider and consumer layers (#NAV00002451)
* Added base CodesTableItemDto (#NAV00003080)
* The dto layer is now JDK 1.4 compliant (#NAV00002409)

Module stelvio-batch-java
* Now supports parallel batches by including the slice variable. 
  New attributes in BatchDO to support parallel batches: slice, sliceStart, sliceEnd.
  Primary key in BatchDO is now a database generated key while the combination of batchName and slice is unique and to be used 
  as the unique identifyer in code 
  Minor changes to column mapping for some attribues (TD#569)
* Enhancements to error handling and logging: 
  Methods for logging have been deprecated
  New utility methods for throwing exceptions 
  New required property in AbstractBatch; exceptionHandler 
  Introduced base classes for batch related exceptions; BatchFunctionalException and BatchSystemException. (TD#570)
* New component BatchProgressEvent for progress reporting using the event architecture. New component 
  LoggerBatchProgressEventListener used to handle and BatchProgressEvents by the way of logging (TD#572)
* Enhancement to transaction handling and LUWs (TD#571)
* Added mapping of changestamp fields to BatchDo (#NAV00003231) 


Module stelvio-star-example
* Added modules for the provider layer (stelvio-provider-star-example-ejb, stelvio-provider-star-example-ejbclient, 
  stelvio-provider-star-example-java) 
  Added module for the dto layer (stelvio-dto-star-example-java) (#NAV00002348)




Changes in version 1.0.3.1 (12.04.2007)
------------------------------------

Module stelvio-common-java
* Fixed bug in getCodesTableItems. CodestableItems were represented in a hashmap as <enum, codestableitem>, but a String 
  variable was used as a key to retrieve the codestableitem (Defect #591, #NAV00001192)


Changes in version 1.0.3 (15.3.2007)
------------------------------------

Module stelvio-common-java
* Introduced NoGenericsCodesTableFactory to be used by EJBs that can't expose Generic types in component interface
* Introduced new component, NoGenericsCodesTableAdapter used to bridge the CodesTableFactory/NoGenericsCodesTableFactory gap
* Introduced IbanValidator used to validate International Bank Account Numbers
* Introduced BbanValidator used to validate Basic Bank Account Numbers (only supports Norwegian BBANs at the moment)
* Introduced RoleValidator and role definitions used to validate the roles sent in to rolechecks.
* Added a RoleValidator util which can create a RoleValidator on the basis of an enumeration of roles implementing
  the ValidRole interface.
* Added the possibility to use enumerations containing roles in the SecurityContext and the possibility to use
  a RoleValidator in the SimpleSecurityContext so that input parameters can be validated.
* Deprecated the set and reset methods of the SecurityContextHolder and RequestContextHolder as these methods
  should not be called from client code. Added setter classes in the support package which through reflection
  can invoke these. Intended for unit-testing only.

Module stelvio-dto-java
* New module added. No content in this release

Module stelvio-presentation-java
* Deprecated MenuAction, when descretion is to be implemented, this class will need to reside in the pensjon project. Defect #5
* Added LocalePhaseListener, a phaselistener that retrieves the current locale from FacesContext and sets it in the
  Spring LocaleContextHolder. Defect #342
* Changed RequestContextPhaseListener to avoid nullpointerexception. The phaselistener is no longer executed in the
  first phase of the lifecycle.
* Guideline for message now includes guidelines for the usage of text elments across funtional areas. Defect #408
* Errors in helpPopUp component has been corrected. Defect #485 and #486
* Architectural principles for the usage of the Valang validation framework has been added to the development handbook
  in the pension project. Defect #544
* Error handling component for the presentation layer for use in error pages has been added. Defect #33
* Implemented optional RoleValidation in the setup of the SecurityContext in the SecurityContextFilter. 
  An optional init parameter can be set specifying an enumeration containing the valid roles of the application.
  This will then be injected into the SecurityContext meaning that all components using the SecurityContext
  will be subject to rolevalidation against application-specific roles.

Module stelvio-consumer-java
* Contains support classes for creating consumer services. See the Guideline - Stelvio - Consumer for more information.


Changes in version 1.0.2 (15.2.2007)
------------------------------------

General
* Consumer integration is now in a separate stelvio-consumer layer. Updates and additions to 
  architecture documentation, guidelines and naming standards regarding this layer.
* Added version history and roadmap pages to Confluence
* Menu- and tasklist- taglibs have been moved out of Stelvio into pension project modules.
* Updates to guideline for stelvio-service with regards to use of transfer objects and configuring EJBs.
* Additions to stelvio-service naming standards with regards to naming of EJB classes and interfaces.

Library updates:
* Upgraded Spring to version 2.0.2
* Upgraded Spring WebFlow to version 1.0.1
* Upgraded Spring Modules Cache to version 0.7
* Upgraded Spring Modules Validation to version 0.7

Module stelvio-common-java
* Added support for validating that a code is present in a codes table [Defect #265]
* Usage of Locale in codes table items have been deprecated; internationalization of decodes will be handled by standard
  jdk support (properties files) [Defect #217]
* Made ServiceRequest and ServiceResponse abstract to explicitly state that they are base classes that must be extended
* Methods on ServiceRequest for setting/retrieving RequestContext are deprecated as client code should not work with
  RequestContext directly; access it through RequestContextHolder instead
* Deprecated TransferObject in favour of ServiceRequest/ServiceResponse
* getItems, getCodesTableItem, getDecode(Object) and getDecode(Object, Locale) in CodesTable have been deprecated
* Added the methods getDecode(Enum), getDecode(Enum, Locale) and validateCode(Enum) in CodesTable
* User id moved from RequestContext to SecurityContext.
* Made ServiceRequest and ServiceResponse abstract to explicitly state that they are base classes that must be extended

Module stelvio-domain-java
* Deprecated all sak-related domain classes, these hva been moved into the pensjon project

Module stelvio-repository-java
* Deprecated all sak-related repository classes, these have been moved into the pensjon project

Module stelvio-batch-java
* AbstractBatch implementation changed; retrival and update of BatchDO is now done through BatchRepository [Defect #55]
* Created new Exceptions to be used by Batch. [Defect #53]
* Batch now throws subclasses of BatchException [Defect #53]
* Added FileIdentity component to the batch framework [Defect #99]

Module stelvio-service-java
* Deprecated TasklistService and DefaultTasklistService. These have been moved to the pensjon project

Module stelvio-presentation-java
* The menu taglib has been moved moved to the pension project application framework.
* Upgraded Spring Modules Validation to 0.7
* Components for help taglib has been added. The taglib consist of three components: HelpDisplayAreaComponent,
  HelpInPageComponent and HelpPopUpComponent. These components also have a common HelpUtils class, with package locale
  utility metodes used by the help components. Resources for these components has been added to src/main/resources. 
* Added two classes for handling resources in pages, StelvioResourceHandler and StelvioResourceLoader. These are used by
  the help components.
* Added a faces-config.xml with definitions of the custom stelvio components under src/main/resources/META-INF
* Removed MenuComponent and MenuItemComponent. The menus used in stelvio should be based on the tomahawk panelNavigation2 
  component.
* Added a custom action class for fetching menu items and convert them into panelnavigation items used by the 
  panelNavigation2 component.

Star example
* Corrected package structure (no.nav.<x>.. -> no.stelvio.<x>.star.example...)
* Added consumer layer

Changes in version 1.0.1 (17.1.2007)
------------------------------------

General
* Added module stelvio-star-example which will hold a complete example of an implementation of a JEE application based
  on the Stelvio application architecture
* Added module stelvio-service-java
* Added module stelvio-repository-java

Module stelvio-common-java
* Added configuration (using the configuration mechanism defined by the JAR file service provider contract in JDK 1.3
  and above) in META-INF/services/org.apache.commons.logging.LogFactory to make sure commons-logging is using an
  application's log4j.properties and not Websphere's own
* Removed remnants of rtv-framework
* Refactored the 2 aspects of RequestContext, current thread handling and data container, into 2 new classes
  * RequestContext -> plain POJO holding specific values, like user id, screen id, etc
  * RequestContextHolder -> holds a RequestContext on the current thread
* Simplified transfer object support
  * No need for Entity(List)Response
  * No need for interfaces
  * 2 concrete classes, ServiceRequest and ServiceResponse, are left -> should be extended by transfer objects
* Cleaned up codes table code
  * Removed deprecated methods
  * Added getItems() on CodesTablePeriodic so the interface is equal to CodesTable
  * Improved documentation of which exceptions are thrown 
* Improved naming and structure of Error package
* No need to implement a constructor only used by Stelvio when removing cause; reflection is used instead
* Created a Stelvio SecurityContext which holds the user id and has methods for role checking
* Column mapping in CodesTable domain classes changed from Norwegian to English; should be overridden using
  AttributeOverride annotations in subclasses
* Fixed CodesTableFactory to generate a CodesTable/CodesTablePeriodic instead of returning a list
* Added Id annotation to indicate primary key; is placed in the top level mapped superclass as it should be the key for
  all codestables
* Fixed usage of serialVersionUID in CodesTable exception classes
* Model id for the CodesTable cache is changed to enable easier separation from other caches
* Split SecurityContext and RequestContext into interface and implementation to enable easier testing and extension
* Removed user id from RequestContext as it is in SecurityContext
* Added builder to RequestContext which makes it easier to build a new instance of it, especially when one should only
  update some of the properties in the current version
* Removed unused classes
* Cleanup of package structure for easier use

Module stelvio-test-java
* Fixed package structure (no.stelvio.common.test -> no.stelvio.test)

Module stelvio-domain-java
* Added domain object Pid, used to represent a Personal Identification number. Includes validation methods.
* Moved domain objects in common for menu here
* Moved domain objects in common for tasklist here
* Removed constructor fron PidValidationException using deprecated ExceptionCopyholder

Module stelvio-repository-java
* Moved repository classes in common for menu here
* Moved repository classes in common for tasklist here 
* Added repository classes for CodesTable
* Changed method signature in CodesTable classes, using generics to specify that the class passed as a param to the
  fetchCodesTable method must be an AbstractCodestableItem implementation
* Added full Hibernate implementation of CodesTableRepository

Module stelvio-batch-java

Module stelvio-service-java
* Moved service classes in common for menu here
* Moved service classes in common for tasklist here
* Added implementation of CodesTableFactory that retrieves codes tables from a repository
* Added MenuItemServiceResponse object to be used by MenuService
  * Is used in MenuItemService instead of deprecated EntityListResponse as the return value

Module stelvio-presentation-java
* Renamed package from no.stelvio.web to no.stelvio.presentation
* Removed remnants of rtv-framework
* Added no.stelvio.presentation.jsf.event.RequestContextPhaseListener, this phaselistener is responsible for updating 
  the screenId in the RequestContext object. This used to be done in RequestContextFilter, but this caused a 
  NullPointerException because the filter runs before the FacesContext and SWF Context are initialized. 
* Added no.stelvio.presentation.constants.ConstantsWrapper. Wrapper class for handling constants in the presentation 
  layer. Provides functionality to extract constants from a given class as a map.
* Added SecurityContextFilter and its parse classes; this filter initializes the SecurityContext
* Cleanup of package structure for easier use
* Fixed class names in security packages to support the naming standard
  * Also changed to use Jee (earlier J2ee) in class names as Stelvio is running mostly on a JEE platform now
* Changed all filters to inherit from Spring's OncePerRequestFilter instead of our own deprecated filter super class
* Updated page security to use the SecurityContext instead of the HttpServletRequest for security checks

Star example
* Added namedquery to retrieve all HenvendelseTypeCti from database
* Moved repository classes for CodesTable to stelvio-repository
* Changed table-mapping; physical database uses T_ prefix for tables
* Column mapping names should be in upper case
* Added integration test of CodesTable APIs
* Use saksbehandling as the package name, not psak; moved all code used in psak over til saksbehandling

