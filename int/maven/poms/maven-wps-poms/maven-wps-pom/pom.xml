<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>no.stelvio.maven.poms</groupId>
		<artifactId>maven-root-pom</artifactId>
		<version>1.2.2</version>
		<relativePath>../../maven-root-pom</relativePath>
	</parent>

	<artifactId>maven-wps-pom</artifactId>
	<version>2.1.6-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>WPS Artifact Master POM</name>

	<build>
		<extensions>
			<extension>
				<groupId>no.nav.maven.lifecycles</groupId>
				<artifactId>service-specification-lifecycle</artifactId>
				<version>1.0.0</version>
			</extension>
		</extensions>
		<directory>${target.dir}</directory>
		<outputDirectory>${target.dir}/classes</outputDirectory>
		<testOutputDirectory>
			${target.dir}/test-classes
		</testOutputDirectory>
		<sourceDirectory>${project.basedir}</sourceDirectory>
		<resources>
			<resource>
				<!-- TODO: This is here because WID insists on having the root folder as a source folder -->
				<!-- TODO: Review which files to exclude/include -->
				<directory>${project.basedir}</directory>
				<excludes>
					<exclude>.settings/**</exclude>
					<exclude>gen/**</exclude>
					<!--
						TODO: See if the following settings can be improved. Any other output folder within ${basedir} is currently unsupported.
					-->
					<exclude>target/**</exclude>
					<exclude>bin/**</exclude>
				</excludes>
				<includes>
					<include>**/*.wsdl</include>
					<include>**/*.xsd</include>
					<include>**/*.module</include>
					<include>**/*.modulex</include>
					<include>**/*.component</include>
					<include>**/*.import</include>
					<include>**/*.export</include>
					<include>**/*.ifm</include>
					<include>**/*.map</include>
					<include>**/*.medflow</include>
					<include>**/*.mfc</include>
					<include>**/*.xsl</include>
					<include>**/*.bpel</include>
					<include>**/*.bpelex</include>
					<include>**/*.mon</include>
					<include>**/*.bcfg</include>
					<include>**/*.scaj2ee</include>
					<include>**/*.subflow</include>
					<include>**/*.subflowex</include>
					<include>**/*.cal</include>
				</includes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<configuration>
						<includes>
							<include>**/*.java</include>
							<include>pom.xml</include>
						</includes>
						<excludes>
							<exclude>.settings/**</exclude>
							<exclude>gen/**</exclude>
							<exclude>target/**</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
				<plugin>
					<groupId>no.nav.maven.plugins</groupId>
					<artifactId>maven-wps-artifact-plugin</artifactId>
					<version>2.0</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>no.nav.maven.plugins</groupId>
					<artifactId>maven-sca-attributes-plugin</artifactId>
					<version>2.0</version>
				</plugin>
				<plugin>
					<groupId>no.nav.maven.plugins</groupId>
					<artifactId>maven-wid-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<wpsLibraryParent>
							<groupId>no.stelvio.maven.poms</groupId>
							<artifactId>maven-wps-library-pom</artifactId>
							<version>2.1.6</version>
						</wpsLibraryParent>
					</configuration>
				</plugin>
				<!-- Since we're using ${project.build.outputDirectory} that doesn't account for target/checkout used by release:perform, we risk conflicts with mvn:release -->
				<!-- To work around this, do clean before build the release. Assume that we're not interested in site-deploy -->
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<configuration>
						<goals>clean deploy</goals>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>no.nav.maven.plugins</groupId>
				<artifactId>maven-wps-artifact-plugin</artifactId>
			</plugin>
			<!--
				TODO: This should ideally not be here, but skipping it causes problems with finding plugin (SNAPSHOT versions i particular)
			-->
			<plugin>
				<groupId>no.nav.maven.plugins</groupId>
				<artifactId>maven-wid-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<outputDirectory>${target.dir}/site</outputDirectory>
	</reporting>

	<dependencies>
		<dependency>
			<groupId>com.ibm.maven.runtimes</groupId>
			<artifactId>wps-runtime</artifactId>
			<version>7.0.0.3</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<properties>
		<maven.test.skip>true</maven.test.skip>
		<!--
			TODO: WID goes bananas if the Maven build is using the default target folder as output. As a workaround we are changing the
			target folder to a folder outside the project
		-->
		<!-- TODO: Review this setting -->
		<target.dir>
			${user.home}/maven-target/${project.groupId}/${project.artifactId}/${project.version}
		</target.dir>
		<scm.root>scm:svn:https://versjonskontroll.adeo.no/svn/stelvio/trunk/int/maven/poms/maven-wps-poms/maven-wps-pom
		</scm.root>
		<scm.connection>${scm.root}</scm.connection>
	</properties>

	<scm>
		<connection>scm:svn:https://versjonskontroll.adeo.no/svn/stelvio/trunk/int/maven/poms/maven-wps-poms/maven-wps-pom</connection>
		<developerConnection>scm:svn:https://versjonskontroll.adeo.no/svn/stelvio/trunk/int/maven/poms/maven-wps-poms/maven-wps-pom</developerConnection>
	</scm>
</project>
