<plugin>
  <description>Maven Plugins</description>
  <groupId>no.nav.maven.plugins</groupId>
  <artifactId>nav-war-plugin</artifactId>
  <version>1.0</version>
  <goalPrefix>nav-war</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>exploded</goal>
      <description>Generate the exploded webapp</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>no.nav.maven.plugins.war.WarExplodedMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>archive</name>
          <type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maven archive configuration to use.</description>
        </parameter>
        <parameter>
          <name>archiveClasses</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether a JAR file will be created for the classes in the webapp. Using this optional configuration
parameter will make the generated classes to be archived into a jar file
and the classes directory will then be excluded from the webapp.</description>
        </parameter>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory containing generated classes.</description>
        </parameter>
        <parameter>
          <name>containerConfigXML</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the context.xml file to use.</description>
        </parameter>
        <parameter>
          <name>dependentWarExcludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to exclude when doing
a war overlay.</description>
        </parameter>
        <parameter>
          <name>dependentWarIncludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to include when doing
a war overlay.
Default is &apos;**&apos;</description>
        </parameter>
        <parameter>
          <name>filters</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Filters (property files) to include during the interpolation of the pom.xml.</description>
        </parameter>
        <parameter>
          <name>manifestFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Custom manifest file to include.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>warSourceDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Single directory for extra files to include in the WAR.</description>
        </parameter>
        <parameter>
          <name>warSourceExcludes</name>
          <alias>excludes</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to exclude from the WAR.</description>
        </parameter>
        <parameter>
          <name>warSourceIncludes</name>
          <alias>includes</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to include in the WAR.
Default is &apos;**&apos;.</description>
        </parameter>
        <parameter>
          <name>webResources</name>
          <type>org.apache.maven.model.Resource[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The list of webResources we want to transfer.</description>
        </parameter>
        <parameter>
          <name>webXml</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the web.xml file to use.</description>
        </parameter>
        <parameter>
          <name>webappDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The directory where the webapp is built.</description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory to unpack dependent WARs into if needed</description>
        </parameter>
      </parameters>
      <configuration>
        <workDirectory implementation="java.io.File">${project.build.directory}/war/work</workDirectory>
        <filters implementation="java.util.List">${project.build.filters}</filters>
        <warSourceDirectory implementation="java.io.File">${basedir}/src/main/webapp</warSourceDirectory>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <classesDirectory implementation="java.io.File">${project.build.outputDirectory}</classesDirectory>
        <containerConfigXML implementation="java.io.File">${maven.war.containerConfigXML}</containerConfigXML>
        <archiveClasses implementation="boolean" default-value="false">${archiveClasses}</archiveClasses>
        <webXml implementation="java.io.File">${maven.war.webxml}</webXml>
        <webappDirectory implementation="java.io.File">${project.build.directory}/${project.build.finalName}</webappDirectory>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.archiver.Archiver</role>
          <role-hint>jar</role-hint>
          <field-name>jarArchiver</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>inplace</goal>
      <description>Generates webapp in the source directory</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>no.nav.maven.plugins.war.WarInPlaceMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>archive</name>
          <type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maven archive configuration to use.</description>
        </parameter>
        <parameter>
          <name>archiveClasses</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether a JAR file will be created for the classes in the webapp. Using this optional configuration
parameter will make the generated classes to be archived into a jar file
and the classes directory will then be excluded from the webapp.</description>
        </parameter>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory containing generated classes.</description>
        </parameter>
        <parameter>
          <name>containerConfigXML</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the context.xml file to use.</description>
        </parameter>
        <parameter>
          <name>dependentWarExcludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to exclude when doing
a war overlay.</description>
        </parameter>
        <parameter>
          <name>dependentWarIncludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to include when doing
a war overlay.
Default is &apos;**&apos;</description>
        </parameter>
        <parameter>
          <name>filters</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Filters (property files) to include during the interpolation of the pom.xml.</description>
        </parameter>
        <parameter>
          <name>manifestFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Custom manifest file to include.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>warSourceDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Single directory for extra files to include in the WAR.</description>
        </parameter>
        <parameter>
          <name>warSourceExcludes</name>
          <alias>excludes</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to exclude from the WAR.</description>
        </parameter>
        <parameter>
          <name>warSourceIncludes</name>
          <alias>includes</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to include in the WAR.
Default is &apos;**&apos;.</description>
        </parameter>
        <parameter>
          <name>webResources</name>
          <type>org.apache.maven.model.Resource[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The list of webResources we want to transfer.</description>
        </parameter>
        <parameter>
          <name>webXml</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the web.xml file to use.</description>
        </parameter>
        <parameter>
          <name>webappDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The directory where the webapp is built.</description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory to unpack dependent WARs into if needed</description>
        </parameter>
      </parameters>
      <configuration>
        <workDirectory implementation="java.io.File">${project.build.directory}/war/work</workDirectory>
        <filters implementation="java.util.List">${project.build.filters}</filters>
        <warSourceDirectory implementation="java.io.File">${basedir}/src/main/webapp</warSourceDirectory>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <classesDirectory implementation="java.io.File">${project.build.outputDirectory}</classesDirectory>
        <containerConfigXML implementation="java.io.File">${maven.war.containerConfigXML}</containerConfigXML>
        <archiveClasses implementation="boolean" default-value="false">${archiveClasses}</archiveClasses>
        <webXml implementation="java.io.File">${maven.war.webxml}</webXml>
        <webappDirectory implementation="java.io.File">${project.build.directory}/${project.build.finalName}</webappDirectory>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.archiver.Archiver</role>
          <role-hint>jar</role-hint>
          <field-name>jarArchiver</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>manifest</goal>
      <description>Generate a manifest for this WAR.</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-resources</phase>
      <implementation>no.nav.maven.plugins.war.WarManifestMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>archive</name>
          <type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maven archive configuration to use.</description>
        </parameter>
        <parameter>
          <name>archiveClasses</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether a JAR file will be created for the classes in the webapp. Using this optional configuration
parameter will make the generated classes to be archived into a jar file
and the classes directory will then be excluded from the webapp.</description>
        </parameter>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory containing generated classes.</description>
        </parameter>
        <parameter>
          <name>containerConfigXML</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the context.xml file to use.</description>
        </parameter>
        <parameter>
          <name>dependentWarExcludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to exclude when doing
a war overlay.</description>
        </parameter>
        <parameter>
          <name>dependentWarIncludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to include when doing
a war overlay.
Default is &apos;**&apos;</description>
        </parameter>
        <parameter>
          <name>filters</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Filters (property files) to include during the interpolation of the pom.xml.</description>
        </parameter>
        <parameter>
          <name>manifestFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Custom manifest file to include.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>warSourceDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Single directory for extra files to include in the WAR.</description>
        </parameter>
        <parameter>
          <name>warSourceExcludes</name>
          <alias>excludes</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to exclude from the WAR.</description>
        </parameter>
        <parameter>
          <name>warSourceIncludes</name>
          <alias>includes</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to include in the WAR.
Default is &apos;**&apos;.</description>
        </parameter>
        <parameter>
          <name>webResources</name>
          <type>org.apache.maven.model.Resource[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The list of webResources we want to transfer.</description>
        </parameter>
        <parameter>
          <name>webXml</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the web.xml file to use.</description>
        </parameter>
        <parameter>
          <name>webappDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The directory where the webapp is built.</description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory to unpack dependent WARs into if needed</description>
        </parameter>
      </parameters>
      <configuration>
        <workDirectory implementation="java.io.File">${project.build.directory}/war/work</workDirectory>
        <filters implementation="java.util.List">${project.build.filters}</filters>
        <warSourceDirectory implementation="java.io.File">${basedir}/src/main/webapp</warSourceDirectory>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <classesDirectory implementation="java.io.File">${project.build.outputDirectory}</classesDirectory>
        <containerConfigXML implementation="java.io.File">${maven.war.containerConfigXML}</containerConfigXML>
        <archiveClasses implementation="boolean" default-value="false">${archiveClasses}</archiveClasses>
        <webXml implementation="java.io.File">${maven.war.webxml}</webXml>
        <webappDirectory implementation="java.io.File">${project.build.directory}/${project.build.finalName}</webappDirectory>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.archiver.Archiver</role>
          <role-hint>jar</role-hint>
          <field-name>jarArchiver</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.archiver.Archiver</role>
          <role-hint>war</role-hint>
          <field-name>warArchiver</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>nav-war</goal>
      <description>Build a war/webapp.</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>no.nav.maven.plugins.war.WarMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>archive</name>
          <type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maven archive configuration to use.</description>
        </parameter>
        <parameter>
          <name>archiveClasses</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether a JAR file will be created for the classes in the webapp. Using this optional configuration
parameter will make the generated classes to be archived into a jar file
and the classes directory will then be excluded from the webapp.</description>
        </parameter>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory containing generated classes.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Classifier to add to the artifact generated. If given, the artifact will be an attachment instead.</description>
        </parameter>
        <parameter>
          <name>containerConfigXML</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the context.xml file to use.</description>
        </parameter>
        <parameter>
          <name>dependentWarExcludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to exclude when doing
a war overlay.</description>
        </parameter>
        <parameter>
          <name>dependentWarIncludes</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to include when doing
a war overlay.
Default is &apos;**&apos;</description>
        </parameter>
        <parameter>
          <name>filters</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Filters (property files) to include during the interpolation of the pom.xml.</description>
        </parameter>
        <parameter>
          <name>libraryArtifactItems</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of artifacts to include in web-inf/lib.</description>
        </parameter>
        <parameter>
          <name>manifestFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Custom manifest file to include.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The directory for the generated WAR.</description>
        </parameter>
        <parameter>
          <name>primaryArtifact</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether this is the main artifact being built. Set to &lt;code&gt;false&lt;/code&gt; if you don&apos;t want to install or
deploy it to the local repository instead of the default one in an execution.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>warName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the generated WAR.</description>
        </parameter>
        <parameter>
          <name>warSourceDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Single directory for extra files to include in the WAR.</description>
        </parameter>
        <parameter>
          <name>warSourceExcludes</name>
          <alias>excludes</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to exclude from the WAR.</description>
        </parameter>
        <parameter>
          <name>warSourceIncludes</name>
          <alias>includes</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The comma separated list of tokens to include in the WAR.
Default is &apos;**&apos;.</description>
        </parameter>
        <parameter>
          <name>webResources</name>
          <type>org.apache.maven.model.Resource[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The list of webResources we want to transfer.</description>
        </parameter>
        <parameter>
          <name>webXml</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the web.xml file to use.</description>
        </parameter>
        <parameter>
          <name>webappDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The directory where the webapp is built.</description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory to unpack dependent WARs into if needed</description>
        </parameter>
      </parameters>
      <configuration>
        <workDirectory implementation="java.io.File">${project.build.directory}/war/work</workDirectory>
        <outputDirectory implementation="java.lang.String">${project.build.directory}</outputDirectory>
        <filters implementation="java.util.List">${project.build.filters}</filters>
        <warSourceDirectory implementation="java.io.File">${basedir}/src/main/webapp</warSourceDirectory>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <classesDirectory implementation="java.io.File">${project.build.outputDirectory}</classesDirectory>
        <primaryArtifact implementation="boolean" default-value="true">${primaryArtifact}</primaryArtifact>
        <containerConfigXML implementation="java.io.File">${maven.war.containerConfigXML}</containerConfigXML>
        <archiveClasses implementation="boolean" default-value="false">${archiveClasses}</archiveClasses>
        <webXml implementation="java.io.File">${maven.war.webxml}</webXml>
        <warName implementation="java.lang.String">${project.build.finalName}</warName>
        <webappDirectory implementation="java.io.File">${project.build.directory}/${project.build.finalName}</webappDirectory>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.archiver.Archiver</role>
          <role-hint>jar</role-hint>
          <field-name>jarArchiver</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.archiver.Archiver</role>
          <role-hint>war</role-hint>
          <field-name>warArchiver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies/>
</plugin>