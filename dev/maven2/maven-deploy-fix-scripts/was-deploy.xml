<?xml version="1.0"?>
<project name="masterBuild" default="start">
			
	<!-- Import all the required ANT libraries -->
	
	<target name="init">	
		<taskdef name="wsInstallApp" classname="com.ibm.websphere.ant.tasks.InstallApplication">
			<classpath>
				<pathelement path="${wid.lib}/wsanttasks.jar" />
			</classpath>
		</taskdef>
		<taskdef name="wsListApp" classname="com.ibm.websphere.ant.tasks.ListApplications">
			<classpath>
				<pathelement path="${wid.lib}/wsanttasks.jar" />
			</classpath>
		</taskdef>		
		<taskdef name="wsUnInstallApp" classname="com.ibm.websphere.ant.tasks.UninstallApplication">
			<classpath>
				<pathelement path="E:/ws-test/nav-int-workspaces/was-deploy/wsanttasks.jar" />
			</classpath>
		</taskdef>
		<taskdef name="wsStartApp" classname="com.ibm.websphere.ant.tasks.StartApplication">
			<classpath>
				<pathelement path="${wid.lib}/wsanttasks.jar" />
			</classpath>
		</taskdef>
		<taskdef name="wsStopApp" classname="com.ibm.websphere.ant.tasks.StopApplication">
			<classpath>
				<pathelement path="${wid.lib}/wsanttasks.jar" />
			</classpath>
		</taskdef>
		<taskdef name="wsAdmin" classname="com.ibm.websphere.ant.tasks.WsAdmin">
			<classpath>
				<pathelement path="${wid.lib}/wsanttasks.jar" />
			</classpath>
		</taskdef>
		
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement path="${maven.compile.classpath}" />
			</classpath>
		</taskdef>
	</target>

	<target name="uninstall">
		<echo>---------------------------</echo>
		<echo>Uninstalling application...</echo>
		<echo>---------------------------</echo>
		<wsUnInstallApp
			wasHome="${was.home}"
			application="${oldApp}"			
			conntype="SOAP"
			host="${host}"
			port="${port}"
			user="${username}"
			password="${password}"			
		/>
	</target>
	
	<target name="install">
		<echo>------------------------</echo>
		<echo>Deploying application...</echo>
		<echo>------------------------</echo>
		<wsInstallApp 
			ear="${earFile}"
			options="${options}"
			wasHome="${was.home}"
			failonerror="true"
			conntype="SOAP"
			host="${host}"
			port="${port}"
			user="${username}"
			password="${password}"			
		/>
	</target>
	
	<target name="installCluster">
		<echo>------------------------</echo>
		<echo>Deploying application...</echo>
		<echo>------------------------</echo>
		<basename file="${earFile}" property="app" suffix=".ear" />
		<wsInstallApp 
			ear="${earFile}"
			options="${options} ${clusteroptions}"
			wasHome="${was.home}"
			failonerror="true"
			conntype="SOAP"
			host="${host}"
			port="${port}"
			user="${username}"
			password="${password}"			
		/>
	</target>
	
	<!-- Start the application at the web server -->
	<target name="start" depends="deploy">
		<echo>-----------------------</echo>
		<echo>Starting application...</echo>
		<echo>-----------------------</echo>

		<wsStartApp
			wasHome="${was.home}"
			application="${appName}"			
			conntype="SOAP"
			host="${host}"
			port="${port}"
			user="${username}"
			password="${password}"			
		/>
	</target>
	
	<!-- Deploy the application to the application server -->
	<target name="deploy" depends="init">
		
		<!-- reading application version from moose id -->
		<loadfile property="versions" srcfile="${mappingFile}" failonerror="true" />
		<propertyregex 	property="appVersion" 
						input="${versions}" 
						regexp="${mooseId}\|(.+)${line.separator}" 
						select="\1" 
						casesensitive="false" />
		
		<!-- Building up earFile -->
		<if>
			<contains string="${appVersion}" substring="\1" />
			<then>
				<fail message="Unable to resolve application version from moose build id ${mooseId}" />
			</then>
			<else>
				<echo>Resolved moose id ${mooseId} to version ${appVersion}</echo>
				<if>
					<contains string="${mooseId}" substring="PEN_" casesensitive="false" />
					<then>
						<property name="earFile" value="${workingArea}/nav-pensjon-pen-jee-${appVersion}.ear" />
						<property name="module" value="pen" />
					</then>
				</if>
				<if>
					<contains string="${mooseId}" substring="PSAK_" casesensitive="false" />
					<then>
						<property name="earFile" value="${workingArea}/nav-pensjon-psak-jee-${appVersion}.ear" />
						<property name="module" value="psak" />
					</then>
				</if>
				<if>
					<contains string="${mooseId}" substring="PSELV_" casesensitive="false" />
					<then>
						<property name="earFile" value="${workingArea}/nav-pensjon-pselv-jee-${appVersion}.ear" />
						<property name="module" value="pselv" />
					</then>
				</if>
				<if>
					<contains string="${mooseId}" substring="POPP_" casesensitive="false" />
					<then>
						<property name="earFile" value="${workingArea}/nav-service-pensjon-popp-jee-${appVersion}.ear" />
						<property name="module" value="popp" />
					</then>
				</if>
				<if>
					<contains string="${mooseId}" substring="PREG_" casesensitive="false" />
					<then>
						<property name="earFile" value="${workingArea}/nav-service-pensjon-regler-jee-${appVersion}.ear" />
						<property name="module" value="preg" />
					</then>
				</if>
				<if>
					<contains string="${mooseId}" substring="MEDL_" casesensitive="false" />
					<then>
						<property name="earFile" value="${workingArea}/nav-service-fellesregister-medl-jee-${appVersion}.ear" />
						<property name="module" value="medl" />
					</then>
				</if>
			</else>
		</if>
		
		<record name="listapp.txt" action="start" loglevel="info" append="false"/>
		<echo>Checking if application already installed...</echo>
		<wsListApp 
				wasHome="${was.home}"
				conntype="SOAP"
				host="${host}"
				port="${port}"
				user="${username}"
				password="${password}"/>
		<record name="listapp.txt" action="stop"/>
		<loadfile property="apps" srcfile="listapp.txt" failonerror="true" />
		<propertyregex 	property="oldApp" 
						input="${apps}" 
						regexp=".*(nav-.+-${module}-jee-.+)${line.separator}" 
						select="\1" 
						casesensitive="false" />
		<if>
			<isset property="oldApp" />
			<then>
				<antcall target="uninstall" />
			</then>
		</if>					
		
		<basename file="${earFile}" property="appName" suffix=".ear" />
		<if>
			<or>
				<equals arg1="${module}" arg2="psak" />
				<equals arg1="${module}" arg2="pselv" />
			</or>
			<then>
				<property name="options" value="-verbose -nodeployejb -appname ${appName} -usedefaultbindings -defaultbinding.virtual.host default_host" />
			</then>
			<else>
				<property name="options" value="-verbose -nodeployejb -appname ${appName}" />
			</else>
		</if>
		
		<echo/>
		<if>
			<and>
				<not><contains string="${cluster}" substring="{cluster}" /></not>
				<not><equals arg1="${cluster}" arg2="" /></not>
			</and>
			<then>
				<property name="clusteroptions" value="-cluster ${cluster} -distributeApp" />
				<antcall target="installCluster" />
			</then>
			<else>
				<antcall target="install" />
			</else>
		</if>
	</target>
	
	
</project>