<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>Environment</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>u3</string>
              <string>u7</string>
              <string>u8</string>
              <string>u42</string>
              <string>t1</string>
              <string>t4</string>
              <string>t5</string>
              <string>t6</string>
              <string>t10</string>
              <string>t11</string>
              <string>u2</string>
              <string>u55</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Applications</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>-- SBS --</string>
              <string>pepgwsbs:1.1.3</string>
              <string>pepgwsbs:1.3.1.0</string>
              <string>pepgwsbs:1.1.7</string>
              <string>pepgwsbs:1.1.8-SNAPSHOT</string>
              <string></string>
              <string>partner-gw-pep-sbs:1.0.6-SNAPSHOT</string>
              <string>partner-gw-pep-sbs:1.0.5</string>
              <string></string>
              <string>partner-gw-router-sbs:1.0.5-SNAPSHOT</string>
              <string>partner-gw-router-sbs:1.0.4</string>
              <string></string>
              <string>service-gw-pep-sbs:1.0.5-SNAPSHOT</string>
              <string>service-gw-pep-sbs:1.0.4</string>
              <string></string>
              <string>service-gw-router-sbs:1.0.6-SNAPSHOT</string>
              <string>service-gw-router-sbs:1.0.5</string>
              <string></string>
              <string>sts-sbs:1.0.4-SNAPSHOT</string>
              <string>sts-sbs:1.0.3</string>
              <string></string>
              <string>-- FSS --</string>
              <string>service-gw-pep-fss:1.0.5-SNAPSHOT</string>
              <string>service-gw-pep-fss:1.0.4</string>
              <string></string>
              <string>service-gw-router-fss:1.0.5-SNAPSHOT</string>
              <string>service-gw-router-fss:1.0.4</string>
              <string></string>
              <string>-- ANNET --</string>
              <string>simpleloopbackservice:0.0.1-SNAPSHOT</string>
              <string>service-gw-pep-sbs:1.0.0-R14204</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>User</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.PasswordParameterDefinition>
          <name>Password</name>
          <description></description>
          <defaultValue>0Gzcr5Rxo1mQN3O12Y7xXg==</defaultValue>
        </hudson.model.PasswordParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>debug</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>deployerPluginVersion</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>0.0.14</string>
              <string>0.0.13</string>
              <string>0.0.15-SNAPSHOT</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>EnvConfig</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>http://fasit.adeo.no/conf</string>
              <string>http://e34apsl00136.devillo.no:8080/conf</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>dpAliasesE</name>
          <description>Hvilke bokser som skal bli deployet til</description>
          <defaultValue>dp-01,dp-02</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>routerProvision</name>
          <description>Provisjonere &lt;b&gt;kun&lt;/b&gt; router-domene?
Kjøres automatisk hvis  WSRR-tjenesteregister og service-gw provisjoneres (provision==true).
</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>provision</name>
          <description>Provisjonere WSRR-tjenesteregister og service-gw?</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>pluginVersion</name>
          <description>Provisioning plugin version (for forsyning av service-gw 2.0 og oppdatering av router-domener)</description>
          <defaultValue>1.1.9</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="test@example.com">
      <autoRebuild>false</autoRebuild>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.scm.SubversionSCM" plugin="test@example.com">
    <locations>
      <hudson.scm.SubversionSCM_-ModuleLocation>
        <remote>https://versjonskontroll.adeo.no/svn/aura/trunk/maven/poms/nav-init-pom</remote>
        <local>.</local>
        <depthOption>infinity</depthOption>
        <ignoreExternalsOption>false</ignoreExternalsOption>
      </hudson.scm.SubversionSCM_-ModuleLocation>
    </locations>
    <excludedRegions></excludedRegions>
    <includedRegions></includedRegions>
    <excludedUsers></excludedUsers>
    <excludedRevprop></excludedRevprop>
    <excludedCommitMessages></excludedCommitMessages>
    <workspaceUpdater class="hudson.scm.subversion.UpdateUpdater"/>
    <ignoreDirPropChanges>false</ignoreDirPropChanges>
    <filterChangelog>false</filterChangelog>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(Default)</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>/var/lib/jenkins/scripts/cleanRepo3gen.sh

#Oppretter mappe for NFS logging og restarter NFS Serveren på Jenkins (kun for U!)
#Må gjøres ofte siden Puppet overskriver endringene hver dag :&apos;(
sudo chown root:ci /etc/exports
sudo chmod g+w /etc/exports
app=$(echo $Applications | cut -d&quot;:&quot; -f1)
folder=&quot;/tmp/nfsshare/datapower/${Environment}_${app}&quot;
mkdir -p ${folder}
echo &quot;$folder 10.33.68.41(rw,sync,no_root_squash)&quot; &gt;&gt; /etc/exports
#Skjuler feilmeldinger pga. duplikatlinjer
sudo service nfs restart 2&gt; /dev/null</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Maven>
      <targets>clean no.nav.maven.plugins:maven-datapower-deploy-plugin:${deployerPluginVersion}:deploy -e -B -U -X</targets>
      <mavenName>Maven 3.3.1</mavenName>
      <pom>${WORKSPACE}/pom.xml</pom>
      <properties>apps=${Applications}
env=${Environment}
username=${User}
password=${Password}
debug=${debug}
envConfigUrl=${EnvConfig}
dpHostnameFilter=${dpHostnameFilter}
dpAliases=${dpAliasesE}</properties>
      <usePrivateRepository>false</usePrivateRepository>
      <settings class="jenkins.mvn.DefaultSettingsProvider"/>
      <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
    </hudson.tasks.Maven>
    <hudson.tasks.Shell>
      <command>if [ $routerProvision == &quot;true&quot; ];
   then

routerAppName=$(echo $Applications | cut -d&quot;:&quot; -f1)
 
if [[ $routerAppName == *router* ]]
then
   domainClassSuffix=&quot;-$(echo $Environment | head -c 1)&quot;
   if [ $domainClassSuffix == &quot;-p&quot; -o $domainClassSuffix == &quot;-P&quot; ];
      then
         domainClassSuffix=&quot;&quot;
   fi
   if [ $routerAppName == &quot;partner-gw-router-sbs&quot; ];
      then
         #dpDomainApplication=&quot;nhn-gw${domainClassSuffix}&quot;
         dpDomainApplication=&quot;nhn-gw-t&quot;
   elif [ $routerAppName == &quot;service-gw-router-sbs&quot; ];
      then
        dpDomainApplication=&quot;${Environment}_service-gw-pep-sbs&quot;
   elif [ $routerAppName == &quot;service-gw-router-fss&quot; ];
      then
        dpDomainApplication=&quot;${Environment}_service-gw-pep-fss&quot;
   fi
   echo &quot;Provisioning $routerAppName with services from $dpDomainApplication&quot;

   cd ${WORKSPACE} &amp;&amp; /usr/maven/latest/bin/mvn clean no.nav.maven.plugins:service-provisioning-maven-plugin:$pluginVersion:router-provision -e -B -U -DenvConfigUrlString=$EnvConfig -Denv=$Environment -Dusername=$USER -Dpassword=$Password -DdpAliases=$dpAliasesE -DrouterAppName=$routerAppName -DdpDomainApplications=$dpDomainApplication
   ### Upload service-registry if the outputfolder exists
   environmentUpperCase=`echo $Environment | awk &apos;{print toupper($0)}&apos;`
   registryDestinationFolder=/data/service-registry/$environmentUpperCase
   registrySourceFolder=${WORKSPACE}/target/output
   if [ -d &quot;$registrySourceFolder&quot; ]; then
      ssh test@example.com &quot;mkdir -p $registryDestinationFolder&quot;
      scp -r $registrySourceFolder/* test@example.com:$registryDestinationFolder
   fi
fi
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>if [ $provision == &quot;true&quot; ];
  then
    echo &quot;Updating service registry file...&quot;
    cd ${WORKSPACE} &amp;&amp; /usr/maven/latest/bin/mvn clean no.nav.maven.plugins:service-provisioning-maven-plugin:${pluginVersion}:provision -e -B -DenvConfigUrlString=https://fasit.adeo.no/conf -Denv=$Environment -Dusername=$USER -Dpassword=$Password -DdpAliases=$dpAliasesE

    environmentUpperCase=`echo $Environment | awk &apos;{print toupper($0)}&apos;`
    registryDestinationFolder=/data/service-registry/$environmentUpperCase
    registrySourceFolder=${WORKSPACE}/target/output
    if [ -d &quot;$registrySourceFolder&quot; ]; then
        ssh test@example.com &quot;mkdir -p $registryDestinationFolder&quot;
        scp -r $registrySourceFolder/* test@example.com:$registryDestinationFolder
    fi
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <com.michelin.cio.hudson.plugins.maskpasswords.MaskPasswordsBuildWrapper/>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="test@example.com">
      <template>#${BUILD_NUMBER}: ${ENV,var=&quot;Applications&quot;}@${ENV,var=&quot;Environment&quot;}</template>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>